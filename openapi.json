{
  "openapi": "3.0.1",
  "info": {
    "title": "Boekuwzending webservices",
    "description": "<span style=\"font-weight: bold;\">Please contact api@boekuwzending.com for questions or credentials.</span>",
    "version": "0.0.0"
  },
  "servers": [
    {
      "url": "https://api.boekuwzending.com",
      "description": "Production server"
    },
    {
      "url": "https://staging.api.boekuwzending.com",
      "description": "Staging server"
    }
  ],
  "security": [
    {
      "OAuth2": ["read", "write"]
    }
  ],
  "paths": {
    "/me": {
      "get": {
        "tags": ["Authorization"],
        "summary": "Retrieves the current user resource.",
        "responses": {
          "200": {
            "description": "User resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/address_book_items": {
      "get": {
        "tags": ["AddressBookItems"],
        "summary": "Retrieves the collection of AddressBookItems resources.",
        "operationId": "getAddressBookItemsCollection",
        "parameters": [
          {
            "name": "relation.id",
            "in": "query",
            "schema": {}
          },
          {
            "name": "relation.id[]",
            "in": "query",
            "schema": {}
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AddressBookItems collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressBookItems-address_book-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressBookItems-address_book-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressBookItems-address_book-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/address_book_items/{id}": {
      "get": {
        "tags": ["AddressBookItems"],
        "summary": "Retrieves a AddressBookItems resource.",
        "operationId": "getAddressBookItemsItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AddressBookItems resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressBookItems-address_book-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressBookItems-address_book-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/AddressBookItems-address_book-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/admin_users": {
      "get": {
        "tags": ["AdminUser"],
        "summary": "Retrieves the collection of AdminUser resources.",
        "operationId": "getAdminUserCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AdminUser collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUser-admin-user-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUser-admin-user-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUser-admin-user-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin_users/{id}": {
      "get": {
        "tags": ["AdminUser"],
        "summary": "Retrieves a AdminUser resource.",
        "operationId": "getAdminUserItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AdminUser resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUser-admin-user-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUser-admin-user-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUser-admin-user-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/bulk_shipments": {
      "get": {
        "tags": ["BulkShipment"],
        "summary": "Retrieves the collection of BulkShipment resources.",
        "operationId": "getBulkShipmentCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BulkShipment collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkShipment-bulk-shipment-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkShipment-bulk-shipment-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkShipment-bulk-shipment-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bulk_shipments/{id}": {
      "get": {
        "tags": ["BulkShipment"],
        "summary": "Retrieves a BulkShipment resource.",
        "operationId": "getBulkShipmentItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BulkShipment resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkShipment-bulk-shipment-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkShipment-bulk-shipment-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/BulkShipment-bulk-shipment-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/buzzie/postcodes": {
      "get": {
        "tags": ["Postcode"],
        "summary": "Retrieves the collection of Postcode resources.",
        "operationId": "buzzie-postcodesPostcodeCollection",
        "parameters": [
          {
            "name": "_global_search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_global_search.properties",
            "in": "query",
            "description": "postcode, region.name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_order[postcode]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Postcode collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Postcode-Api.BuzziePostcode"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Postcode-Api.BuzziePostcode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conversations": {
      "get": {
        "tags": ["Conversation"],
        "summary": "Retrieves the collection of Conversation resources.",
        "operationId": "getConversationCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conversation-conversation-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conversation-conversation-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conversation-conversation-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Conversation"],
        "summary": "Creates a Conversation resource.",
        "operationId": "postConversationCollection",
        "requestBody": {
          "description": "The new Conversation resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Conversation-conversation-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Conversation-conversation-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Conversation-conversation-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Conversation resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation-conversation-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation-conversation-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation-conversation-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "conversation"
      }
    },
    "/conversations/{id}": {
      "get": {
        "tags": ["Conversation"],
        "summary": "Retrieves a Conversation resource.",
        "operationId": "getConversationItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation-conversation-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation-conversation-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation-conversation-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/conversations/{id}/messages": {
      "get": {
        "tags": ["Message", "Conversation"],
        "summary": "Retrieves the collection of Message resources.",
        "operationId": "api_conversations_messages_get_subresource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/countries": {
      "get": {
        "tags": ["Country"],
        "summary": "Retrieves the collection of Country resources.",
        "operationId": "getCountryCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Country collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country-country-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country-country-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country-country-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/countries/{id}": {
      "get": {
        "tags": ["Country"],
        "summary": "Retrieves a Country resource.",
        "operationId": "getCountryItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Country resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country-country-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Country-country-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Country-country-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/distributors": {
      "get": {
        "tags": ["Distributor"],
        "summary": "Retrieves the collection of Distributor resources.",
        "operationId": "getDistributorCollection",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Distributor collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Distributor-distributor-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Distributor-distributor-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Distributor-distributor-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/distributors/{id}": {
      "get": {
        "tags": ["Distributor"],
        "summary": "Retrieves a Distributor resource.",
        "operationId": "getDistributorItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Distributor resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Distributor-distributor-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Distributor-distributor-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Distributor-distributor-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/integrations": {
      "get": {
        "tags": ["Integration"],
        "summary": "Retrieves the collection of Integration resources.",
        "operationId": "getIntegrationCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Integration collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Integration-integration-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Integration-integration-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Integration-integration-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/integrations/shopify": {
      "post": {
        "tags": ["ShopifyServiceIntegration"],
        "summary": "Creates a ShopifyServiceIntegration resource.",
        "operationId": "postShopifyServiceIntegrationCollection",
        "requestBody": {
          "description": "The new ShopifyServiceIntegration resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyServiceIntegration-integration-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyServiceIntegration-integration-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyServiceIntegration-integration-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "ShopifyServiceIntegration resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyServiceIntegration-integration-item-post-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyServiceIntegration-integration-item-post-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyServiceIntegration-integration-item-post-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "shopifyServiceIntegration"
      }
    },
    "/integrations/shopify/{id}": {
      "get": {
        "tags": ["ShopifyServiceIntegration"],
        "summary": "Retrieves a ShopifyServiceIntegration resource.",
        "operationId": "getShopifyServiceIntegrationItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ShopifyServiceIntegration resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyServiceIntegration-integration-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyServiceIntegration-integration-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyServiceIntegration-integration-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/integrations/{id}": {
      "get": {
        "tags": ["Integration"],
        "summary": "Retrieves a Integration resource.",
        "operationId": "getIntegrationItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Integration resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration-integration-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration-integration-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Integration-integration-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/labels/{id}": {
      "get": {
        "tags": ["Label"],
        "summary": "Retrieves a Label resource.",
        "operationId": "getLabelItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Label resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label-label-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Label-label-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Label-label-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/matrices": {
      "get": {
        "tags": ["Matrix"],
        "summary": "Retrieves the collection of Matrix resources.",
        "operationId": "getMatrixCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Matrix collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Matrix-matrix-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Matrix-matrix-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Matrix-matrix-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/matrices/{id}": {
      "get": {
        "tags": ["Matrix"],
        "summary": "Retrieves a Matrix resource.",
        "operationId": "getMatrixItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Matrix resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Matrix-matrix-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Matrix-matrix-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Matrix-matrix-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/matrix_groups": {
      "get": {
        "tags": ["MatrixGroup"],
        "summary": "Retrieves the collection of MatrixGroup resources.",
        "operationId": "getMatrixGroupCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MatrixGroup collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatrixGroup-matrix-group-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatrixGroup-matrix-group-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatrixGroup-matrix-group-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/matrix_groups/{id}": {
      "get": {
        "tags": ["MatrixGroup"],
        "summary": "Retrieves a MatrixGroup resource.",
        "operationId": "getMatrixGroupItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MatrixGroup resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatrixGroup-matrix-group-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MatrixGroup-matrix-group-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/MatrixGroup-matrix-group-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/matrix_postcodes": {
      "get": {
        "tags": ["MatrixPostcode"],
        "summary": "Retrieves the collection of MatrixPostcode resources.",
        "operationId": "getMatrixPostcodeCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MatrixPostcode collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatrixPostcode-matrix-postcode-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatrixPostcode-matrix-postcode-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatrixPostcode-matrix-postcode-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/matrix_postcodes/{id}": {
      "get": {
        "tags": ["MatrixPostcode"],
        "summary": "Retrieves a MatrixPostcode resource.",
        "operationId": "getMatrixPostcodeItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MatrixPostcode resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatrixPostcode-matrix-postcode-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MatrixPostcode-matrix-postcode-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/MatrixPostcode-matrix-postcode-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/matrix_rates": {
      "get": {
        "tags": ["MatrixRate"],
        "summary": "Retrieves the collection of MatrixRate resources.",
        "operationId": "getMatrixRateCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MatrixRate collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatrixRate-matrix-rate-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatrixRate-matrix-rate-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatrixRate-matrix-rate-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/matrix_rates/{id}": {
      "get": {
        "tags": ["MatrixRate"],
        "summary": "Retrieves a MatrixRate resource.",
        "operationId": "getMatrixRateItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MatrixRate resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatrixRate-matrix-rate-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MatrixRate-matrix-rate-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/MatrixRate-matrix-rate-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/messages": {
      "post": {
        "tags": ["Message"],
        "summary": "Creates a Message resource.",
        "operationId": "postMessageCollection",
        "requestBody": {
          "description": "The new Message resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message-message-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Message-message-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Message-message-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Message resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message-message-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Message-message-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Message-message-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "message"
      }
    },
    "/messages/{id}": {
      "get": {
        "tags": ["Message"],
        "summary": "Retrieves a Message resource.",
        "operationId": "getMessageItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message-message-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Message-message-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Message-message-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Message"],
        "summary": "Updates the Message resource.",
        "operationId": "patchMessageItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Message resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Message-message-patch"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Message-message-patch"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Message resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message-message-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Message-message-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Message-message-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "message"
      }
    },
    "/orders": {
      "get": {
        "tags": ["ExternalOrder"],
        "summary": "Retrieves the collection of ExternalOrder resources.",
        "operationId": "getExternalOrderCollection",
        "parameters": [
          {
            "name": "externalId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalId[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalOrder collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalOrder-order-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalOrder-order-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalOrder-order-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ExternalOrder"],
        "summary": "Creates a ExternalOrder resource.",
        "operationId": "postExternalOrderCollection",
        "requestBody": {
          "description": "The new ExternalOrder resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalOrder-order-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalOrder-order-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ExternalOrder-order-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "ExternalOrder resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalOrder-order-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalOrder-order-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalOrder-order-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "externalOrder"
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": ["ExternalOrder"],
        "summary": "Retrieves a ExternalOrder resource.",
        "operationId": "getExternalOrderItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalOrder resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalOrder-order-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalOrder-order-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalOrder-order-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["ExternalOrder"],
        "summary": "Replaces the ExternalOrder resource.",
        "operationId": "putExternalOrderItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated ExternalOrder resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalOrder-order-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalOrder-order-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ExternalOrder-order-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "ExternalOrder resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalOrder-order-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalOrder-order-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalOrder-order-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "externalOrder"
      },
      "delete": {
        "tags": ["ExternalOrder"],
        "summary": "Removes the ExternalOrder resource.",
        "operationId": "deleteExternalOrderItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "ExternalOrder resource deleted",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/pickup_requests": {
      "get": {
        "tags": ["PickupRequest"],
        "summary": "Retrieves the collection of PickupRequest resources.",
        "operationId": "getPickupRequestCollection",
        "parameters": [
          {
            "name": "_global_search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_global_search.properties",
            "in": "query",
            "description": "relation.name, relation.number, pickupAddress.contact.company, pickupAddress.contact.name, pickupAddress.address.addressLine1, pickupAddress.address.postcode, pickupAddress.address.city, pickupAddress.address.country, user.firstName, user.lastNamePrefix, user.lastName",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_order[relation.name]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PickupRequest collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickupRequest-pickup_request-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickupRequest-pickup_request-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickupRequest-pickup_request-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["PickupRequest"],
        "summary": "Creates a PickupRequest resource.",
        "operationId": "postPickupRequestCollection",
        "requestBody": {
          "description": "The new PickupRequest resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PickupRequest-pickup_request-collection-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PickupRequest-pickup_request-collection-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/PickupRequest-pickup_request-collection-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "PickupRequest resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupRequest-pickup_request-collection-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupRequest-pickup_request-collection-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PickupRequest-pickup_request-collection-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "pickupRequest"
      }
    },
    "/pickup_requests/{id}": {
      "get": {
        "tags": ["PickupRequest"],
        "summary": "Retrieves a PickupRequest resource.",
        "operationId": "getPickupRequestItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PickupRequest resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupRequest-pickup_request-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupRequest-pickup_request-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PickupRequest-pickup_request-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["PickupRequest"],
        "summary": "Replaces the PickupRequest resource.",
        "operationId": "putPickupRequestItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated PickupRequest resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PickupRequest-pickup_request-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PickupRequest-pickup_request-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/PickupRequest-pickup_request-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "PickupRequest resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupRequest-pickup_request-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupRequest-pickup_request-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PickupRequest-pickup_request-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "pickupRequest"
      },
      "delete": {
        "tags": ["PickupRequest"],
        "summary": "Removes the PickupRequest resource.",
        "operationId": "deletePickupRequestItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "PickupRequest resource deleted",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["PickupRequest"],
        "summary": "Updates the PickupRequest resource.",
        "operationId": "patchPickupRequestItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated PickupRequest resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PickupRequest-pickup_request-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PickupRequest-pickup_request-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "PickupRequest resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupRequest-pickup_request-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupRequest-pickup_request-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PickupRequest-pickup_request-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "pickupRequest"
      }
    },
    "/rate-request": {
      "post": {
        "tags": ["Shipment"],
        "summary": "Creates a Shipment resource.",
        "operationId": "post_rateShipmentCollection",
        "requestBody": {
          "description": "The new Shipment resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipment-shipment-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Shipment-shipment-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Shipment-shipment-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Shipment resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "shipment"
      }
    },
    "/relations": {
      "get": {
        "tags": ["Relation"],
        "summary": "Retrieves the collection of Relation resources.",
        "operationId": "getRelationCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Relation collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Relation-relation-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Relation-relation-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Relation-relation-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/relations/{id}": {
      "get": {
        "tags": ["Relation"],
        "summary": "Retrieves a Relation resource.",
        "operationId": "getRelationItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Relation resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Relation-relation-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Relation-relation-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Relation-relation-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/scan_inbounds": {
      "post": {
        "tags": ["ScanInbound"],
        "summary": "Creates a ScanInbound resource.",
        "operationId": "postScanInboundCollection",
        "requestBody": {
          "description": "The new ScanInbound resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanInbound-ScanInbound.Write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ScanInbound-ScanInbound.Write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ScanInbound-ScanInbound.Write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "ScanInbound resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanInbound-ScanInbound.Read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanInbound-ScanInbound.Read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ScanInbound-ScanInbound.Read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "scanInbound"
      }
    },
    "/scan_inbounds/{uuid}": {
      "get": {
        "tags": ["ScanInbound"],
        "summary": "Retrieves a ScanInbound resource.",
        "operationId": "getScanInboundItem",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ScanInbound resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanInbound-ScanInbound.Read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanInbound-ScanInbound.Read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ScanInbound-ScanInbound.Read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/services": {
      "post": {
        "tags": ["Shipment"],
        "summary": "Creates a Shipment resource.",
        "operationId": "post_serviceShipmentCollection",
        "requestBody": {
          "description": "The new Shipment resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipment-shipment-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Shipment-shipment-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Shipment-shipment-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Shipment resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "shipment"
      }
    },
    "/services/{id}": {
      "get": {
        "tags": ["Service"],
        "summary": "Retrieves a Service resource.",
        "operationId": "getServiceItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service-service-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Service-service-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Service-service-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/shipment_quotations": {
      "get": {
        "tags": ["ShipmentQuotation"],
        "summary": "Retrieves the collection of ShipmentQuotation resources.",
        "operationId": "getShipmentQuotationCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ShipmentQuotation collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShipmentQuotation-shipment-quotation-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShipmentQuotation-shipment-quotation-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShipmentQuotation-shipment-quotation-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment_quotations/{id}": {
      "get": {
        "tags": ["ShipmentQuotation"],
        "summary": "Retrieves a ShipmentQuotation resource.",
        "operationId": "getShipmentQuotationItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ShipmentQuotation resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentQuotation-shipment-quotation-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentQuotation-shipment-quotation-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentQuotation-shipment-quotation-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/shipments": {
      "get": {
        "tags": ["Shipment"],
        "summary": "Retrieves the collection of Shipment resources.",
        "operationId": "getShipmentCollection",
        "parameters": [
          {
            "name": "_global_search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_global_search.properties",
            "in": "query",
            "description": "status, invoiceReference, bulk.reference, relation.name, relation.number, shipFrom.address.city, shipFrom.address.country, shipTo.address.city, shipTo.address.country, shipTo.address.postcode, vehicle.type, transportSteps.route.sequence, transportSteps.route.collection.date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoiceReference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rate.distributor.code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rate.distributor.code[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "draft",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "_order[sequence.number]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shipment collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shipment-shipment-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shipment-shipment-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shipment-shipment-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Shipment"],
        "summary": "Creates a Shipment resource.",
        "operationId": "postShipmentCollection",
        "requestBody": {
          "description": "The new Shipment resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipment-shipment-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Shipment-shipment-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Shipment-shipment-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Shipment resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment-shipment-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment-shipment-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment-shipment-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "shipment"
      }
    },
    "/shipments/items/{id}": {
      "get": {
        "tags": ["Item"],
        "summary": "Retrieves a Item resource.",
        "operationId": "getItemItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item-shipment_item-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Item-shipment_item-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Item-shipment_item-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/shipments/{id}": {
      "get": {
        "tags": ["Shipment"],
        "summary": "Retrieves a Shipment resource.",
        "operationId": "getShipmentItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shipment resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment-shipment-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment-shipment-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment-shipment-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/shipments/{id}/labels": {
      "get": {
        "tags": ["Label", "Shipment"],
        "summary": "Retrieves the collection of Label resources.",
        "operationId": "api_shipments_labels_get_subresource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment.id",
            "in": "query",
            "schema": {}
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Label collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Label"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Label"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Label"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/surcharge_sets/{id}": {
      "get": {
        "tags": ["SurchargeSet"],
        "summary": "Retrieves a SurchargeSet resource.",
        "operationId": "getSurchargeSetItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SurchargeSet resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurchargeSet-surcharge-set-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurchargeSet-surcharge-set-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SurchargeSet-surcharge-set-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/track-and-trace/{id}": {
      "get": {
        "tags": ["Label"],
        "summary": "Retrieves the collection of Label resources.",
        "operationId": "track_and_traceLabelCollection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipment.id",
            "in": "query",
            "schema": {}
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Label collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Label"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Label"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Label"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trackings": {
      "get": {
        "tags": ["Tracking"],
        "summary": "Retrieves the collection of Tracking resources.",
        "operationId": "getTrackingCollection",
        "parameters": [
          {
            "name": "shipmentItem.shipment.id",
            "in": "query",
            "schema": {}
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracking collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tracking-tracking-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tracking-tracking-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tracking-tracking-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trackings/{id}": {
      "get": {
        "tags": ["Tracking"],
        "summary": "Retrieves a Tracking resource.",
        "operationId": "getTrackingItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracking resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracking-tracking-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracking-tracking-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Tracking-tracking-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/depots": {
      "get": {
        "tags": ["Depot"],
        "summary": "Retrieves the collection of Depot resources.",
        "operationId": "getDepotCollection",
        "parameters": [
          {
            "name": "_global_search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_global_search.properties",
            "in": "query",
            "description": "description, distributor.name, address.addressLine1, address.postcode, address.city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exists[key]",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "_order[description]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Depot collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Depot-transport-depot-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Depot-transport-depot-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Depot-transport-depot-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Depot"],
        "summary": "Creates a Depot resource.",
        "operationId": "postDepotCollection",
        "requestBody": {
          "description": "The new Depot resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Depot-transport-depot-collection-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Depot-transport-depot-collection-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Depot-transport-depot-collection-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Depot resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Depot-transport-depot-collection-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Depot-transport-depot-collection-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Depot-transport-depot-collection-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "depot"
      }
    },
    "/transport/depots/{id}": {
      "get": {
        "tags": ["Depot"],
        "summary": "Retrieves a Depot resource.",
        "operationId": "getDepotItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Depot resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Depot-transport-depot-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Depot-transport-depot-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Depot-transport-depot-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Depot"],
        "summary": "Replaces the Depot resource.",
        "operationId": "putDepotItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Depot resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Depot-transport-depot-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Depot-transport-depot-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Depot-transport-depot-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Depot resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Depot-transport-depot-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Depot-transport-depot-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Depot-transport-depot-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "depot"
      },
      "patch": {
        "tags": ["Depot"],
        "summary": "Updates the Depot resource.",
        "operationId": "patchDepotItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Depot resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Depot-transport-depot-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Depot-transport-depot-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Depot resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Depot-transport-depot-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Depot-transport-depot-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Depot-transport-depot-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "depot"
      }
    },
    "/transport/drivers": {
      "get": {
        "tags": ["Driver"],
        "summary": "Retrieves the collection of Driver resources.",
        "operationId": "getDriverCollection",
        "parameters": [
          {
            "name": "_global_search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_global_search.properties",
            "in": "query",
            "description": "firstName, lastNamePrefix, lastName, availableDays",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_order[fullName]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_order[employmentStartedAt]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasActiveEmployment",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Driver collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Driver-transport-driver-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Driver-transport-driver-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Driver-transport-driver-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Driver"],
        "summary": "Creates a Driver resource.",
        "operationId": "postDriverCollection",
        "requestBody": {
          "description": "The new Driver resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Driver-transport-driver-collection-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Driver-transport-driver-collection-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Driver-transport-driver-collection-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Driver resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver-transport-driver-collection-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver-transport-driver-collection-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Driver-transport-driver-collection-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "driver"
      }
    },
    "/transport/drivers/{id}": {
      "get": {
        "tags": ["Driver"],
        "summary": "Retrieves a Driver resource.",
        "operationId": "getDriverItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Driver resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver-transport-driver-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver-transport-driver-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Driver-transport-driver-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Driver"],
        "summary": "Replaces the Driver resource.",
        "operationId": "putDriverItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Driver resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Driver-transport-driver-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Driver-transport-driver-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Driver-transport-driver-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Driver resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver-transport-driver-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver-transport-driver-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Driver-transport-driver-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "driver"
      },
      "delete": {
        "tags": ["Driver"],
        "summary": "Removes the Driver resource.",
        "operationId": "deleteDriverItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Driver resource deleted",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Driver"],
        "summary": "Updates the Driver resource.",
        "operationId": "patchDriverItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Driver resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Driver-transport-driver-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Driver-transport-driver-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Driver resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver-transport-driver-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver-transport-driver-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Driver-transport-driver-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "driver"
      }
    },
    "/transport/excluded_pickups": {
      "get": {
        "tags": ["ExcludedPickup"],
        "summary": "Retrieves the collection of ExcludedPickup resources.",
        "operationId": "getExcludedPickupCollection",
        "parameters": [
          {
            "name": "_global_search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_global_search.properties",
            "in": "query",
            "description": "description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_order[description]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExcludedPickup collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ExcludedPickup"],
        "summary": "Creates a ExcludedPickup resource.",
        "operationId": "postExcludedPickupCollection",
        "requestBody": {
          "description": "The new ExcludedPickup resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-collection-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-collection-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-collection-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "ExcludedPickup resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-collection-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-collection-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-collection-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "excludedPickup"
      }
    },
    "/transport/excluded_pickups/{id}": {
      "get": {
        "tags": ["ExcludedPickup"],
        "summary": "Retrieves a ExcludedPickup resource.",
        "operationId": "getExcludedPickupItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ExcludedPickup resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["ExcludedPickup"],
        "summary": "Replaces the ExcludedPickup resource.",
        "operationId": "putExcludedPickupItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated ExcludedPickup resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "ExcludedPickup resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "excludedPickup"
      },
      "patch": {
        "tags": ["ExcludedPickup"],
        "summary": "Updates the ExcludedPickup resource.",
        "operationId": "patchExcludedPickupItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated ExcludedPickup resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "ExcludedPickup resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ExcludedPickup-transport-excluded_pickup-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "excludedPickup"
      }
    },
    "/transport/pickup_requests": {
      "get": {
        "tags": ["TransportPickupRequest"],
        "summary": "Retrieves the collection of TransportPickupRequest resources.",
        "operationId": "getTransportPickupRequestCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TransportPickupRequest collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["TransportPickupRequest"],
        "summary": "Creates a TransportPickupRequest resource.",
        "operationId": "postTransportPickupRequestCollection",
        "requestBody": {
          "description": "The new TransportPickupRequest resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransportPickupRequest"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TransportPickupRequest"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/TransportPickupRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "TransportPickupRequest resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-collection-write"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-collection-write"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-collection-write"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "transportPickupRequest"
      }
    },
    "/transport/pickup_requests/{id}": {
      "get": {
        "tags": ["TransportPickupRequest"],
        "summary": "Retrieves a TransportPickupRequest resource.",
        "operationId": "getTransportPickupRequestItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TransportPickupRequest resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["TransportPickupRequest"],
        "summary": "Replaces the TransportPickupRequest resource.",
        "operationId": "putTransportPickupRequestItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated TransportPickupRequest resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "TransportPickupRequest resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "transportPickupRequest"
      },
      "delete": {
        "tags": ["TransportPickupRequest"],
        "summary": "Removes the TransportPickupRequest resource.",
        "operationId": "deleteTransportPickupRequestItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "TransportPickupRequest resource deleted",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["TransportPickupRequest"],
        "summary": "Updates the TransportPickupRequest resource.",
        "operationId": "patchTransportPickupRequestItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated TransportPickupRequest resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "TransportPickupRequest resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/TransportPickupRequest-transport-pickup_request-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "transportPickupRequest"
      }
    },
    "/transport/pickup_schedules": {
      "get": {
        "tags": ["PickupSchedule"],
        "summary": "Retrieves the collection of PickupSchedule resources.",
        "operationId": "getPickupScheduleCollection",
        "parameters": [
          {
            "name": "_global_search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_global_search.properties",
            "in": "query",
            "description": "days, vehicles.type, vehicles.description, relation.name, relation.number, addressBookItem.contact.company, addressBookItem.contact.name, addressBookItem.address.addressLine1, addressBookItem.address.postcode, addressBookItem.address.city, addressBookItem.address.country, depots.description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PickupSchedule collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["PickupSchedule"],
        "summary": "Creates a PickupSchedule resource.",
        "operationId": "postPickupScheduleCollection",
        "requestBody": {
          "description": "The new PickupSchedule resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PickupSchedule"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PickupSchedule"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/PickupSchedule"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "PickupSchedule resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-collection-write"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-collection-write"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-collection-write"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "pickupSchedule"
      }
    },
    "/transport/pickup_schedules/{id}": {
      "get": {
        "tags": ["PickupSchedule"],
        "summary": "Retrieves a PickupSchedule resource.",
        "operationId": "getPickupScheduleItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PickupSchedule resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["PickupSchedule"],
        "summary": "Replaces the PickupSchedule resource.",
        "operationId": "putPickupScheduleItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated PickupSchedule resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "PickupSchedule resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "pickupSchedule"
      },
      "patch": {
        "tags": ["PickupSchedule"],
        "summary": "Updates the PickupSchedule resource.",
        "operationId": "patchPickupScheduleItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated PickupSchedule resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "PickupSchedule resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSchedule-transport-pickup_schedule-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "pickupSchedule"
      }
    },
    "/transport/pickups": {
      "get": {
        "tags": ["Pickup"],
        "summary": "Retrieves the collection of Pickup resources.",
        "operationId": "getPickupCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pickup collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pickup-transport-pickup-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pickup-transport-pickup-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pickup-transport-pickup-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transport/pickups/{id}": {
      "get": {
        "tags": ["Pickup"],
        "summary": "Retrieves a Pickup resource.",
        "operationId": "getPickupItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pickup resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pickup-transport-pickup-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Pickup-transport-pickup-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Pickup-transport-pickup-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/positions": {
      "get": {
        "tags": ["Position"],
        "summary": "Retrieves the collection of Position resources.",
        "operationId": "getPositionCollection",
        "parameters": [
          {
            "name": "vehicle.id",
            "in": "query",
            "schema": {}
          },
          {
            "name": "vehicle.id[]",
            "in": "query",
            "schema": {}
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Position collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position-firebase.transport-position.write"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position-firebase.transport-position.write"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position-firebase.transport-position.write"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Position"],
        "summary": "Creates a Position resource.",
        "operationId": "postPositionCollection",
        "requestBody": {
          "description": "The new Position resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Position-firebase.transport-position.write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Position-firebase.transport-position.write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Position-firebase.transport-position.write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Position resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Position-firebase.transport-position.write"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Position-firebase.transport-position.write"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Position-firebase.transport-position.write"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "position"
      }
    },
    "/transport/positions/{id}": {
      "get": {
        "tags": ["Position"],
        "summary": "Retrieves a Position resource.",
        "operationId": "getPositionItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Position resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Position-firebase.transport-position.write"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Position-firebase.transport-position.write"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Position-firebase.transport-position.write"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/postcodes": {
      "get": {
        "tags": ["Postcode"],
        "summary": "Retrieves the collection of Postcode resources.",
        "operationId": "getPostcodeCollection",
        "parameters": [
          {
            "name": "_global_search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_global_search.properties",
            "in": "query",
            "description": "postcode, region.name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_order[postcode]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Postcode collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Postcode-transport-postcode-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Postcode-transport-postcode-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Postcode-transport-postcode-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Postcode"],
        "summary": "Creates a Postcode resource.",
        "operationId": "postPostcodeCollection",
        "requestBody": {
          "description": "The new Postcode resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Postcode-transport-postcode-collection-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Postcode-transport-postcode-collection-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Postcode-transport-postcode-collection-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Postcode resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Postcode-transport-postcode-collection-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Postcode-transport-postcode-collection-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Postcode-transport-postcode-collection-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "postcode"
      }
    },
    "/transport/postcodes/{id}": {
      "get": {
        "tags": ["Postcode"],
        "summary": "Retrieves a Postcode resource.",
        "operationId": "getPostcodeItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Postcode resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Postcode-transport-postcode-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Postcode-transport-postcode-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Postcode-transport-postcode-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Postcode"],
        "summary": "Replaces the Postcode resource.",
        "operationId": "putPostcodeItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Postcode resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Postcode-transport-postcode-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Postcode-transport-postcode-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Postcode-transport-postcode-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Postcode resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Postcode-transport-postcode-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Postcode-transport-postcode-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Postcode-transport-postcode-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "postcode"
      },
      "delete": {
        "tags": ["Postcode"],
        "summary": "Removes the Postcode resource.",
        "operationId": "deletePostcodeItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Postcode resource deleted",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Postcode"],
        "summary": "Updates the Postcode resource.",
        "operationId": "patchPostcodeItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Postcode resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Postcode-transport-postcode-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Postcode-transport-postcode-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Postcode resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Postcode-transport-postcode-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Postcode-transport-postcode-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Postcode-transport-postcode-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "postcode"
      }
    },
    "/transport/regions": {
      "get": {
        "tags": ["Region"],
        "summary": "Retrieves the collection of Region resources.",
        "operationId": "getRegionCollection",
        "parameters": [
          {
            "name": "_global_search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_global_search.properties",
            "in": "query",
            "description": "name, depot.description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_order[name]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Region collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region-transport-region-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region-transport-region-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region-transport-region-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Region"],
        "summary": "Creates a Region resource.",
        "operationId": "postRegionCollection",
        "requestBody": {
          "description": "The new Region resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Region-transport-region-collection-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Region-transport-region-collection-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Region-transport-region-collection-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Region resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region-transport-region-collection-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Region-transport-region-collection-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Region-transport-region-collection-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "region"
      }
    },
    "/transport/regions/{id}": {
      "get": {
        "tags": ["Region"],
        "summary": "Retrieves a Region resource.",
        "operationId": "getRegionItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Region resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region-transport-region-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Region-transport-region-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Region-transport-region-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Region"],
        "summary": "Replaces the Region resource.",
        "operationId": "putRegionItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Region resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Region resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region-transport-region-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Region-transport-region-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Region-transport-region-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "region"
      },
      "patch": {
        "tags": ["Region"],
        "summary": "Updates the Region resource.",
        "operationId": "patchRegionItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Region resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Region resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region-transport-region-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Region-transport-region-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Region-transport-region-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "region"
      }
    },
    "/transport/route_collection_bulks": {
      "get": {
        "tags": ["RouteCollectionBulk"],
        "summary": "Retrieves the collection of RouteCollectionBulk resources.",
        "operationId": "getRouteCollectionBulkCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RouteCollectionBulk collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["RouteCollectionBulk"],
        "summary": "Creates a RouteCollectionBulk resource.",
        "operationId": "postRouteCollectionBulkCollection",
        "requestBody": {
          "description": "The new RouteCollectionBulk resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "RouteCollectionBulk resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "routeCollectionBulk"
      }
    },
    "/transport/route_collection_bulks/{id}": {
      "get": {
        "tags": ["RouteCollectionBulk"],
        "summary": "Retrieves a RouteCollectionBulk resource.",
        "operationId": "getRouteCollectionBulkItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RouteCollectionBulk resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["RouteCollectionBulk"],
        "summary": "Replaces the RouteCollectionBulk resource.",
        "operationId": "putRouteCollectionBulkItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated RouteCollectionBulk resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "RouteCollectionBulk resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "routeCollectionBulk"
      },
      "patch": {
        "tags": ["RouteCollectionBulk"],
        "summary": "Updates the RouteCollectionBulk resource.",
        "operationId": "patchRouteCollectionBulkItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated RouteCollectionBulk resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "RouteCollectionBulk resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection_bulk-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "routeCollectionBulk"
      }
    },
    "/transport/route_collection_vehicles": {
      "get": {
        "tags": ["RouteCollectionVehicle"],
        "summary": "Retrieves the collection of RouteCollectionVehicle resources.",
        "operationId": "getRouteCollectionVehicleCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RouteCollectionVehicle collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["RouteCollectionVehicle"],
        "summary": "Creates a RouteCollectionVehicle resource.",
        "operationId": "postRouteCollectionVehicleCollection",
        "requestBody": {
          "description": "The new RouteCollectionVehicle resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "RouteCollectionVehicle resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "routeCollectionVehicle"
      }
    },
    "/transport/route_collection_vehicles/{id}": {
      "get": {
        "tags": ["RouteCollectionVehicle"],
        "summary": "Retrieves a RouteCollectionVehicle resource.",
        "operationId": "getRouteCollectionVehicleItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RouteCollectionVehicle resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["RouteCollectionVehicle"],
        "summary": "Replaces the RouteCollectionVehicle resource.",
        "operationId": "putRouteCollectionVehicleItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated RouteCollectionVehicle resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "RouteCollectionVehicle resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "routeCollectionVehicle"
      },
      "delete": {
        "tags": ["RouteCollectionVehicle"],
        "summary": "Removes the RouteCollectionVehicle resource.",
        "operationId": "deleteRouteCollectionVehicleItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "RouteCollectionVehicle resource deleted",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["RouteCollectionVehicle"],
        "summary": "Updates the RouteCollectionVehicle resource.",
        "operationId": "patchRouteCollectionVehicleItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated RouteCollectionVehicle resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "RouteCollectionVehicle resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection_vehicle-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "routeCollectionVehicle"
      }
    },
    "/transport/route_collections": {
      "get": {
        "tags": ["RouteCollection"],
        "summary": "Retrieves the collection of RouteCollection resources.",
        "operationId": "getRouteCollectionCollection",
        "parameters": [
          {
            "name": "_global_search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_global_search.properties",
            "in": "query",
            "description": "description, status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_order[description]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RouteCollection collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollection-transport-route_collection-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollection-transport-route_collection-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollection-transport-route_collection-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["RouteCollection"],
        "summary": "Creates a RouteCollection resource.",
        "operationId": "postRouteCollectionCollection",
        "requestBody": {
          "description": "The new RouteCollection resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollection-transport-route_collection-collection-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollection-transport-route_collection-collection-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollection-transport-route_collection-collection-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "RouteCollection resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollection-transport-route_collection-collection-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollection-transport-route_collection-collection-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollection-transport-route_collection-collection-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "routeCollection"
      }
    },
    "/transport/route_collections/{id}": {
      "get": {
        "tags": ["RouteCollection"],
        "summary": "Retrieves a RouteCollection resource.",
        "operationId": "getRouteCollectionItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RouteCollection resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["RouteCollection"],
        "summary": "Replaces the RouteCollection resource.",
        "operationId": "putRouteCollectionItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated RouteCollection resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "RouteCollection resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "routeCollection"
      },
      "patch": {
        "tags": ["RouteCollection"],
        "summary": "Updates the RouteCollection resource.",
        "operationId": "patchRouteCollectionItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated RouteCollection resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "RouteCollection resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "routeCollection"
      }
    },
    "/transport/route_collections/{id}/route_collection_bulks": {
      "get": {
        "tags": ["RouteCollectionBulk", "RouteCollection"],
        "summary": "Retrieves the collection of RouteCollectionBulk resources.",
        "operationId": "api_route_collections_route_collection_bulks_get_subresource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RouteCollectionBulk collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollectionBulk"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollectionBulk"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollectionBulk"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/route_collections/{id}/route_collection_vehicles": {
      "get": {
        "tags": ["RouteCollectionVehicle", "RouteCollection"],
        "summary": "Retrieves the collection of RouteCollectionVehicle resources.",
        "operationId": "api_route_collections_route_collection_vehicles_get_subresource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RouteCollectionVehicle collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollectionVehicle"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollectionVehicle"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteCollectionVehicle"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/route_collections/{id}/routes": {
      "get": {
        "tags": ["Route", "RouteCollection"],
        "summary": "Retrieves the collection of Route resources.",
        "operationId": "api_route_collections_routes_get_subresource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Route collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Route"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Route"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Route"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/route_collections/{id}/routes/{routes}/steps": {
      "get": {
        "tags": ["Step", "Route"],
        "summary": "Retrieves the collection of Step resources.",
        "operationId": "api_route_collections_routes_steps_get_subresource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routes",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Step collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/route_collections/{id}/unassigneds": {
      "get": {
        "tags": ["Unassigned", "RouteCollection"],
        "summary": "Retrieves the collection of Unassigned resources.",
        "operationId": "api_route_collections_unassigneds_get_subresource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unassigned collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Unassigned"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Unassigned"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Unassigned"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/routes": {
      "get": {
        "tags": ["Route"],
        "summary": "Retrieves the collection of Route resources.",
        "operationId": "getRouteCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Route collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Route-transport-route-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Route-transport-route-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Route-transport-route-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transport/routes/{id}": {
      "get": {
        "tags": ["Route"],
        "summary": "Retrieves a Route resource.",
        "operationId": "getRouteItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Route resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route-transport-route-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Route-transport-route-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Route-transport-route-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Route"],
        "summary": "Replaces the Route resource.",
        "operationId": "putRouteItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Route resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Route-transport-route-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Route-transport-route-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Route-transport-route-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Route resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route-transport-route-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Route-transport-route-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Route-transport-route-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "route"
      },
      "patch": {
        "tags": ["Route"],
        "summary": "Updates the Route resource.",
        "operationId": "patchRouteItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Route resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Route-transport-route-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Route-transport-route-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Route resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route-transport-route-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Route-transport-route-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Route-transport-route-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "route"
      }
    },
    "/transport/routes/{id}/steps": {
      "get": {
        "tags": ["Step", "Route"],
        "summary": "Retrieves the collection of Step resources.",
        "operationId": "api_routes_steps_get_subresource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Step collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/statuses": {
      "get": {
        "tags": ["Status"],
        "summary": "Retrieves the collection of Status resources.",
        "operationId": "getStatusCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Status-transport-status-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Status-transport-status-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Status-transport-status-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Status"],
        "summary": "Creates a Status resource.",
        "operationId": "postStatusCollection",
        "requestBody": {
          "description": "The new Status resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Status-transport-status-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Status-transport-status-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Status-transport-status-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Status resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status-transport-status-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Status-transport-status-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Status-transport-status-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "status"
      }
    },
    "/transport/statuses/{id}": {
      "get": {
        "tags": ["Status"],
        "summary": "Retrieves a Status resource.",
        "operationId": "getStatusItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status-transport-status-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Status-transport-status-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Status-transport-status-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/steps": {
      "get": {
        "tags": ["Step"],
        "summary": "Retrieves the collection of Step resources.",
        "operationId": "getStepCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Step collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step-transport-step-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step-transport-step-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Step-transport-step-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transport/steps/{id}": {
      "get": {
        "tags": ["Step"],
        "summary": "Retrieves a Step resource.",
        "operationId": "getStepItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Step resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Step-transport-step-collection-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Step-transport-step-collection-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Step-transport-step-collection-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Step"],
        "summary": "Removes the Step resource.",
        "operationId": "deleteStepItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Step resource deleted",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/task_activities": {
      "get": {
        "tags": ["TaskActivity"],
        "summary": "Retrieves the collection of TaskActivity resources.",
        "operationId": "getTaskActivityCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TaskActivity collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskActivity-transport-task-activity-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskActivity-transport-task-activity-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskActivity-transport-task-activity-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transport/task_activities/{id}": {
      "get": {
        "tags": ["TaskActivity"],
        "summary": "Retrieves a TaskActivity resource.",
        "operationId": "getTaskActivityItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TaskActivity resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskActivity-transport-task-activity-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskActivity-transport-task-activity-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/TaskActivity-transport-task-activity-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/task_labels": {
      "get": {
        "tags": ["TaskLabel"],
        "summary": "Retrieves the collection of TaskLabel resources.",
        "operationId": "getTaskLabelCollection",
        "parameters": [
          {
            "name": "label.shipment.status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label.shipment.status[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "_global_search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_global_search.properties",
            "in": "query",
            "description": "label.shipment.relation.name, pickupActivity.depot.description, pickupActivity.description, pickupActivity.address.addressLine1, pickupActivity.address.postcode, pickupActivity.address.city, deliveryActivities.depot.description, deliveryActivities.description, deliveryActivities.address.addressLine1, deliveryActivities.address.postcode, deliveryActivities.address.city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_order[dateRange.begin]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.begin[before]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.begin[strictly_before]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.begin[after]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.begin[strictly_after]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.end[before]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.end[strictly_before]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.end[after]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.end[strictly_after]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "deliveryStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deliveryStatus[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "region.depot.id",
            "in": "query",
            "schema": {}
          },
          {
            "name": "region.depot.id[]",
            "in": "query",
            "schema": {}
          },
          {
            "name": "exists[pickupActivity.step]",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exists[status]",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exists[followUpTask]",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "error",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TaskLabel collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskLabel-transport-task-collection-read_transport-task_label-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskLabel-transport-task-collection-read_transport-task_label-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskLabel-transport-task-collection-read_transport-task_label-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transport/task_labels/{id}": {
      "get": {
        "tags": ["TaskLabel"],
        "summary": "Retrieves a TaskLabel resource.",
        "operationId": "getTaskLabelItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TaskLabel resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLabel-transport-task-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLabel-transport-task-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLabel-transport-task-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["TaskLabel"],
        "summary": "Replaces the TaskLabel resource.",
        "operationId": "putTaskLabelItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated TaskLabel resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskLabel-transport-task-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskLabel-transport-task-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/TaskLabel-transport-task-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "TaskLabel resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLabel-transport-task-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLabel-transport-task-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/TaskLabel-transport-task-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "taskLabel"
      }
    },
    "/transport/task_pickups": {
      "get": {
        "tags": ["TaskPickup"],
        "summary": "Retrieves the collection of TaskPickup resources.",
        "operationId": "getTaskPickupCollection",
        "parameters": [
          {
            "name": "_order[dateRange.begin]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.begin[before]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.begin[strictly_before]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.begin[after]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.begin[strictly_after]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.end[before]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.end[strictly_before]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.end[after]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.end[strictly_after]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "deliveryStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deliveryStatus[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "region.depot.id",
            "in": "query",
            "schema": {}
          },
          {
            "name": "region.depot.id[]",
            "in": "query",
            "schema": {}
          },
          {
            "name": "exists[pickupActivity.step]",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exists[status]",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exists[followUpTask]",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "error",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TaskPickup collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskPickup-transport-task-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskPickup-transport-task-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskPickup-transport-task-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transport/task_pickups/{id}": {
      "get": {
        "tags": ["TaskPickup"],
        "summary": "Retrieves a TaskPickup resource.",
        "operationId": "getTaskPickupItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TaskPickup resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPickup-transport-task-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPickup-transport-task-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPickup-transport-task-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["TaskPickup"],
        "summary": "Replaces the TaskPickup resource.",
        "operationId": "putTaskPickupItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated TaskPickup resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskPickup-transport-task-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskPickup-transport-task-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/TaskPickup-transport-task-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "TaskPickup resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPickup-transport-task-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPickup-transport-task-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPickup-transport-task-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "taskPickup"
      }
    },
    "/transport/tasks": {
      "get": {
        "tags": ["Task"],
        "summary": "Retrieves the collection of Task resources.",
        "operationId": "getTaskCollection",
        "parameters": [
          {
            "name": "_order[dateRange.begin]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.begin[before]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.begin[strictly_before]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.begin[after]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.begin[strictly_after]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.end[before]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.end[strictly_before]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.end[after]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateRange.end[strictly_after]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "deliveryStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deliveryStatus[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "region.depot.id",
            "in": "query",
            "schema": {}
          },
          {
            "name": "region.depot.id[]",
            "in": "query",
            "schema": {}
          },
          {
            "name": "exists[pickupActivity.step]",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exists[status]",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exists[followUpTask]",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "error",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task-transport-task-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task-transport-task-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task-transport-task-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transport/tasks/{id}": {
      "get": {
        "tags": ["Task"],
        "summary": "Retrieves a Task resource.",
        "operationId": "getTaskItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task-transport-task-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Task-transport-task-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Task-transport-task-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Task"],
        "summary": "Replaces the Task resource.",
        "operationId": "putTaskItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Task resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task-transport-task-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Task-transport-task-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Task-transport-task-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Task resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task-transport-task-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Task-transport-task-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Task-transport-task-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "task"
      }
    },
    "/transport/unassigned_labels": {
      "get": {
        "tags": ["UnassignedLabel"],
        "summary": "Retrieves the collection of UnassignedLabel resources.",
        "operationId": "getUnassignedLabelCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UnassignedLabel collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnassignedLabel"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnassignedLabel"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnassignedLabel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transport/unassigned_labels/{id}": {
      "get": {
        "tags": ["UnassignedLabel"],
        "summary": "Retrieves a UnassignedLabel resource.",
        "operationId": "getUnassignedLabelItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UnassignedLabel resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnassignedLabel-transport-unassigned-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnassignedLabel-transport-unassigned-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UnassignedLabel-transport-unassigned-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/unassigned_pickups": {
      "get": {
        "tags": ["UnassignedPickup"],
        "summary": "Retrieves the collection of UnassignedPickup resources.",
        "operationId": "getUnassignedPickupCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UnassignedPickup collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnassignedPickup"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnassignedPickup"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnassignedPickup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transport/unassigned_pickups/{id}": {
      "get": {
        "tags": ["UnassignedPickup"],
        "summary": "Retrieves a UnassignedPickup resource.",
        "operationId": "getUnassignedPickupItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UnassignedPickup resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnassignedPickup-transport-unassigned-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnassignedPickup-transport-unassigned-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UnassignedPickup-transport-unassigned-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/unassigned_shipments": {
      "get": {
        "tags": ["UnassignedShipment"],
        "summary": "Retrieves the collection of UnassignedShipment resources.",
        "operationId": "getUnassignedShipmentCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UnassignedShipment collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnassignedShipment"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnassignedShipment"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnassignedShipment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transport/unassigned_shipments/{id}": {
      "get": {
        "tags": ["UnassignedShipment"],
        "summary": "Retrieves a UnassignedShipment resource.",
        "operationId": "getUnassignedShipmentItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UnassignedShipment resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnassignedShipment-transport-unassigned-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnassignedShipment-transport-unassigned-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UnassignedShipment-transport-unassigned-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/unassigneds": {
      "get": {
        "tags": ["Unassigned"],
        "summary": "Retrieves the collection of Unassigned resources.",
        "operationId": "getUnassignedCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unassigned collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Unassigned-transport-unassigned-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Unassigned-transport-unassigned-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Unassigned-transport-unassigned-collection-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transport/unassigneds/{id}": {
      "get": {
        "tags": ["Unassigned"],
        "summary": "Retrieves a Unassigned resource.",
        "operationId": "getUnassignedItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unassigned resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unassigned-transport-unassigned-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Unassigned-transport-unassigned-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Unassigned-transport-unassigned-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/vehicles": {
      "get": {
        "tags": ["Vehicle"],
        "summary": "Retrieves the collection of Vehicle resources.",
        "operationId": "getVehicleCollection",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "depot.key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "depot.key[]",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "_global_search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_global_search.properties",
            "in": "query",
            "description": "licensePlate, phoneNumber, description, type, depot.description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "depot.id",
            "in": "query",
            "schema": {}
          },
          {
            "name": "depot.id[]",
            "in": "query",
            "schema": {}
          },
          {
            "name": "availabilityAt",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vehicle-transport-vehicle-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vehicle-transport-vehicle-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vehicle-transport-vehicle-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Vehicle"],
        "summary": "Creates a Vehicle resource.",
        "operationId": "postVehicleCollection",
        "requestBody": {
          "description": "The new Vehicle resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vehicle-transport-vehicle-collection-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Vehicle-transport-vehicle-collection-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Vehicle-transport-vehicle-collection-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Vehicle resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle-transport-vehicle-collection-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle-transport-vehicle-collection-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle-transport-vehicle-collection-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "vehicle"
      }
    },
    "/transport/vehicles/{id}": {
      "get": {
        "tags": ["Vehicle"],
        "summary": "Retrieves a Vehicle resource.",
        "operationId": "getVehicleItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Vehicle"],
        "summary": "Replaces the Vehicle resource.",
        "operationId": "putVehicleItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Vehicle resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Vehicle resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "vehicle"
      },
      "delete": {
        "tags": ["Vehicle"],
        "summary": "Removes the Vehicle resource.",
        "operationId": "deleteVehicleItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Vehicle resource deleted",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Vehicle"],
        "summary": "Updates the Vehicle resource.",
        "operationId": "patchVehicleItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Vehicle resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Vehicle resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle-transport-vehicle-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "vehicle"
      }
    },
    "/transport/warehouse/{waybill}/info": {
      "get": {
        "tags": ["WarehouseInformation"],
        "summary": "Retrieves a WarehouseInformation resource.",
        "operationId": "getWarehouseInformationItem",
        "parameters": [
          {
            "name": "waybill",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "WarehouseInformation resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehouseInformation-transport-warehouse_waybill_info-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehouseInformation-transport-warehouse_waybill_info-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/WarehouseInformation-transport-warehouse_waybill_info-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/transport/warehouse_informations": {
      "get": {
        "tags": ["WarehouseInformation"],
        "summary": "Retrieves the collection of WarehouseInformation resources.",
        "operationId": "getWarehouseInformationCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "WarehouseInformation collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WarehouseInformation"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WarehouseInformation"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WarehouseInformation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/types": {
      "get": {
        "tags": ["Type"],
        "summary": "Retrieves the collection of Type resources.",
        "operationId": "getTypeCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Type collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Type-type"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Type-type"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Type-type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/types/{id}": {
      "get": {
        "tags": ["Type"],
        "summary": "Retrieves a Type resource.",
        "operationId": "getTypeItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Type resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Type-type"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Type-type"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Type-type"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["User"],
        "summary": "Retrieves the collection of User resources.",
        "operationId": "getUserCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User-user-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User-user-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User-user-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Creates a User resource.",
        "operationId": "postUserCollection",
        "requestBody": {
          "description": "The new User resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User-user-collection-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/User-user-collection-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/User-user-collection-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "User resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-user-collection-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/User-user-collection-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-user-collection-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "user"
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Retrieves a User resource.",
        "operationId": "getUserItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-user-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/User-user-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-user-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "tags": ["Webhook"],
        "summary": "Retrieves the collection of Webhook resources.",
        "operationId": "getWebhookCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Webhook-webhook-collection-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Webhook-webhook-collection-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Webhook-webhook-collection-read"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Webhook"],
        "summary": "Creates a Webhook resource.",
        "operationId": "postWebhookCollection",
        "requestBody": {
          "description": "The new Webhook resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook-webhook-write"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook-webhook-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Webhook-webhook-write"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Webhook resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook-webhook-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook-webhook-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook-webhook-item-read"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "webhook"
      }
    },
    "/webhooks/{id}": {
      "get": {
        "tags": ["Webhook"],
        "summary": "Retrieves a Webhook resource.",
        "operationId": "getWebhookItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook-webhook-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook-webhook-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook-webhook-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/widgets": {
      "get": {
        "tags": ["Widget"],
        "summary": "Retrieves the collection of Widget resources.",
        "operationId": "getWidgetCollection",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "The collection page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_items_per_page",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "_pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Widget collection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Widget-widget-read"
                  }
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Widget-widget-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Widget-widget-read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/widgets/{id}": {
      "get": {
        "tags": ["Widget"],
        "summary": "Retrieves a Widget resource.",
        "operationId": "getWidgetItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Widget resource response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Widget-widget-item-read"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/Widget-widget-item-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Widget-widget-item-read"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Me": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "conversation": {
            "type": "string"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "numberAddition": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "stateOrProvince": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "privateAddress": {
            "type": "boolean"
          },
          "forkliftOrLoadingDockAvailable": {
            "type": "boolean"
          },
          "accessibleWithTrailer": {
            "type": "boolean"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point"
          },
          "benelux": {
            "type": "boolean",
            "readOnly": true
          },
          "eU": {
            "type": "boolean",
            "readOnly": true
          },
          "europe": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "Address-ScanInbound.Read": {
        "type": "object",
        "properties": {
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          }
        }
      },
      "Address-address_book-collection-read": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "numberAddition": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "privateAddress": {
            "type": "boolean"
          },
          "forkliftOrLoadingDockAvailable": {
            "type": "boolean"
          },
          "accessibleWithTrailer": {
            "type": "boolean"
          }
        }
      },
      "Address-address_book-item-read": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "numberAddition": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "privateAddress": {
            "type": "boolean"
          },
          "forkliftOrLoadingDockAvailable": {
            "type": "boolean"
          },
          "accessibleWithTrailer": {
            "type": "boolean"
          }
        }
      },
      "Address-order-item-read": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "numberAddition": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "privateAddress": {
            "type": "boolean"
          },
          "forkliftOrLoadingDockAvailable": {
            "type": "boolean"
          },
          "accessibleWithTrailer": {
            "type": "boolean"
          }
        }
      },
      "Address-order-write": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "numberAddition": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "privateAddress": {
            "type": "boolean"
          },
          "forkliftOrLoadingDockAvailable": {
            "type": "boolean"
          },
          "accessibleWithTrailer": {
            "type": "boolean"
          }
        }
      },
      "Address-pickup_request-collection-read": {
        "type": "object",
        "properties": {
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "addressLine1": {
            "type": "string"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point-pickup_request-collection-read"
          }
        }
      },
      "Address-shipment-collection-read": {
        "type": "object",
        "properties": {
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point-shipment-collection-read"
          }
        }
      },
      "Address-shipment-item-read": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "numberAddition": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "privateAddress": {
            "type": "boolean"
          },
          "forkliftOrLoadingDockAvailable": {
            "type": "boolean"
          },
          "accessibleWithTrailer": {
            "type": "boolean"
          }
        }
      },
      "Address-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "numberAddition": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "privateAddress": {
            "type": "boolean"
          },
          "forkliftOrLoadingDockAvailable": {
            "type": "boolean"
          },
          "accessibleWithTrailer": {
            "type": "boolean"
          }
        }
      },
      "Address-shipment-write": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "numberAddition": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "privateAddress": {
            "type": "boolean"
          },
          "forkliftOrLoadingDockAvailable": {
            "type": "boolean"
          },
          "accessibleWithTrailer": {
            "type": "boolean"
          }
        }
      },
      "Address-transport-depot-collection-read": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point-transport-depot-collection-read"
          }
        }
      },
      "Address-transport-depot-collection-write": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point-transport-depot-collection-write"
          }
        }
      },
      "Address-transport-depot-item-read": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point-transport-depot-item-read"
          }
        }
      },
      "Address-transport-depot-item-write": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point-transport-depot-item-write"
          }
        }
      },
      "Address-transport-pickup-collection-read": {
        "type": "object"
      },
      "Address-transport-pickup_schedule-collection-read": {
        "type": "object",
        "properties": {
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "addressLine1": {
            "type": "string"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point-transport-pickup_schedule-collection-read"
          }
        }
      },
      "Address-transport-route-item-read": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point-transport-route-item-read"
          }
        }
      },
      "Address-transport-step-collection-read": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point-transport-step-collection-read"
          }
        }
      },
      "Address-transport-task-collection-read": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point-transport-task-collection-read"
          }
        }
      },
      "Address-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point-transport-task-collection-read_transport-task_label-collection-read"
          }
        }
      },
      "Address-transport-task-item-read": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Point-transport-task-item-read"
          }
        }
      },
      "Address-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "addressLine1": {
            "type": "string"
          }
        }
      },
      "Address-transport-warehouse_waybill_info-read": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "numberAddition": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "NL",
            "default": "NL"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          }
        }
      },
      "AddressBookItems-address_book-collection-read": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact-address_book-collection-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-address_book-collection-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "AddressBookItems-address_book-item-read": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "dpdCustomerNumber": {
            "type": "string"
          },
          "dpdDepotCode": {
            "maxLength": 4,
            "minLength": 4,
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact-address_book-item-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-address_book-item-read"
          },
          "instructions": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-address_book-item-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "AddressBookItems-pickup_request-collection-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-pickup_request-collection-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-pickup_request-collection-read"
          }
        }
      },
      "AddressBookItems-transport-pickup-collection-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-transport-pickup-collection-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-pickup-collection-read"
          }
        }
      },
      "AddressBookItems-transport-pickup_schedule-collection-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-transport-pickup_schedule-collection-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-pickup_schedule-collection-read"
          }
        }
      },
      "AddressBookItems-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-transport-unassigned-item-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-unassigned-item-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "AdminUser-admin-user-item-read": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "username": {
            "type": "string"
          }
        },
        "description": ""
      },
      "AdminUser-admin-user-read": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "username": {
            "type": "string"
          }
        },
        "description": ""
      },
      "AdminUser-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Brand": {
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "trackingPage": {
            "$ref": "#/components/schemas/TrackingPage"
          },
          "integrations": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Client"
            }
          },
          "bulkShipments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "trackingEmails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingEmail"
            }
          },
          "default": {
            "type": "boolean",
            "description": "Used to identify if brand is default for relation."
          },
          "name": {
            "type": "string"
          },
          "shopName": {
            "type": "string",
            "description": "Property will be used to host track & trace page."
          },
          "primaryColor": {
            "type": "string",
            "example": "#2C613E",
            "default": "#2C613E"
          },
          "secondaryColor": {
            "type": "string",
            "example": "#f3f4f6",
            "default": "#f3f4f6"
          },
          "logoFile": {
            "type": "string",
            "format": "binary"
          },
          "logo": {
            "$ref": "#/components/schemas/File"
          },
          "headerTextColor": {
            "type": "string",
            "example": "#6B7280",
            "default": "#6B7280"
          },
          "headerBackgroundColor": {
            "type": "string",
            "example": "#ffffff",
            "default": "#ffffff"
          },
          "homepageUrl": {
            "type": "string"
          },
          "webshopUrl": {
            "type": "string"
          },
          "contactUrl": {
            "type": "string"
          },
          "footerTextColor": {
            "type": "string",
            "example": "#6B7280",
            "default": "#6B7280"
          },
          "footerBackgroundColor": {
            "type": "string",
            "example": "#ffffff",
            "default": "#ffffff"
          },
          "street": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber"
          },
          "emailAddress": {
            "type": "string"
          },
          "sendTrackingEmails": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "primaryColorText": {
            "type": "string",
            "readOnly": true
          },
          "secondaryColorText": {
            "type": "string",
            "readOnly": true
          },
          "relationPaths": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "BrandEmailRecipient": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "readOnly": true
          },
          "displayValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "BulkShipment-bulk-shipment-collection-read": {
        "type": "object"
      },
      "BulkShipment-bulk-shipment-item-read": {
        "type": "object"
      },
      "BulkShipment-shipment-collection-read": {
        "type": "object",
        "properties": {
          "reference": {
            "maxLength": 100,
            "type": "string"
          }
        }
      },
      "BulkShipment-transport-route_collection-item-read": {
        "type": "object",
        "properties": {
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-route_collection-item-read"
          },
          "reference": {
            "maxLength": 100,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "BulkShipment-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "reference": {
            "maxLength": 100,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "title": {
            "type": "string"
          },
          "icon": {
            "pattern": "^(.*(^(far|fas|fa|mdi)\\s[\\w-]+).*)$",
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "brand": {
            "$ref": "#/components/schemas/Brand"
          },
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "defaultFromAddress": {
            "type": "string",
            "format": "iri-reference"
          },
          "remark": {
            "type": "string"
          },
          "defaultPrintProfile": {
            "$ref": "#/components/schemas/PrintProfile"
          },
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RedirectUri"
            }
          },
          "grants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Grant"
            }
          },
          "scopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Scope"
            }
          },
          "active": {
            "type": "boolean"
          },
          "allowPlainTextPkce": {
            "type": "boolean"
          },
          "confidential": {
            "type": "boolean",
            "readOnly": true
          },
          "plainTextPkceAllowed": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "Client-integration-item-post-read": {
        "type": "object"
      },
      "Collection": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean",
            "description": "Checks whether the collection is empty (contains no elements).",
            "readOnly": true
          },
          "keys": {
            "type": "array",
            "description": "Gets all keys/indices of the collection.",
            "readOnly": true,
            "items": {
              "type": "integer"
            }
          },
          "values": {
            "type": "array",
            "description": "Gets all values of the collection.",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "iterator": {
            "type": "object",
            "readOnly": true
          }
        }
      },
      "Collection-transport-warehouse_waybill_info-read": {
        "type": "object"
      },
      "CommercialInvoice": {
        "type": "object",
        "properties": {
          "shipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "uploadedBy": {
            "type": "string",
            "format": "iri-reference"
          },
          "type": {
            "type": "string",
            "example": "uploaded",
            "default": "uploaded"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ComputingTimes-transport-route_collection-item-read": {
        "type": "object",
        "properties": {
          "loading": {
            "type": "integer"
          },
          "solving": {
            "type": "integer"
          },
          "routing": {
            "type": "integer"
          }
        }
      },
      "ComputingTimes-transport-route_collection-item-write": {
        "type": "object"
      },
      "Contact": {
        "type": "object",
        "properties": {
          "gender": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "formattedName": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Contact-address_book-collection-read": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-address_book-collection-read"
          },
          "emailAddress": {
            "type": "string"
          }
        }
      },
      "Contact-address_book-item-read": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-address_book-item-read"
          },
          "emailAddress": {
            "type": "string"
          }
        }
      },
      "Contact-pickup_request-collection-read": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          }
        }
      },
      "Contact-shipment-item-read": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-shipment-item-read"
          },
          "emailAddress": {
            "type": "string"
          }
        }
      },
      "Contact-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-shipment-quotation-item-read"
          },
          "emailAddress": {
            "type": "string"
          }
        }
      },
      "Contact-shipment-write": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-shipment-write"
          },
          "emailAddress": {
            "type": "string"
          }
        }
      },
      "Contact-transport-pickup-collection-read": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          }
        }
      },
      "Contact-transport-pickup_schedule-collection-read": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          }
        }
      },
      "Contact-transport-task-item-read": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-task-item-read"
          },
          "emailAddress": {
            "type": "string"
          }
        }
      },
      "Contact-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          }
        }
      },
      "Contact-transport-warehouse_waybill_info-read": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          }
        }
      },
      "Content-shipment-item-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 70,
            "type": "string"
          },
          "tariffNumber": {
            "maxLength": 35,
            "type": "string"
          },
          "countryOfOrigin": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "example": 1
          },
          "weight": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions-shipment-item-read"
          }
        }
      },
      "Content-shipment-write": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 70,
            "type": "string"
          },
          "tariffNumber": {
            "maxLength": 35,
            "type": "string"
          },
          "countryOfOrigin": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "example": 1
          },
          "weight": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions-shipment-write"
          }
        }
      },
      "Content-shipment_item-item-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 70,
            "type": "string"
          },
          "tariffNumber": {
            "maxLength": 35,
            "type": "string"
          },
          "countryOfOrigin": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "example": 1
          },
          "weight": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions-shipment_item-item-read"
          }
        }
      },
      "Conversation-conversation-item-read": {
        "type": "object",
        "properties": {
          "shipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipmentQuotation": {
            "type": "string",
            "format": "iri-reference"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string",
            "readOnly": true
          },
          "subjectType": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Conversation-conversation-read": {
        "type": "object",
        "properties": {
          "shipment": {
            "$ref": "#/components/schemas/Shipment-conversation-read"
          },
          "shipmentQuotation": {
            "$ref": "#/components/schemas/ShipmentQuotation-conversation-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string",
            "readOnly": true
          },
          "subjectType": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Conversation-conversation-write": {
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipmentQuotation": {
            "type": "string",
            "format": "iri-reference"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Conversation-shipment-item-read": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Conversation-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Country-country-item-read": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Country-country-read": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        },
        "description": ""
      },
      "CustomsInformationContents": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "readOnly": true
          },
          "displayValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "DateRange-transport-task-collection-read": {
        "required": ["begin", "end"],
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DateRange-transport-task-collection-read_transport-task_label-collection-read": {
        "required": ["begin", "end"],
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DateRange-transport-task-item-read": {
        "required": ["begin", "end"],
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DateRange-transport-task-item-write": {
        "required": ["begin", "end"],
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Delivery": {
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "vatNumber": {
            "type": "string"
          },
          "eoriNumber": {
            "type": "string"
          }
        }
      },
      "Delivery-shipment-collection-read": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-shipment-collection-read"
          }
        }
      },
      "Delivery-shipment-item-read": {
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-shipment-item-read"
          },
          "vatNumber": {
            "type": "string"
          },
          "eoriNumber": {
            "type": "string"
          }
        }
      },
      "Delivery-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-shipment-quotation-item-read"
          },
          "vatNumber": {
            "type": "string"
          },
          "eoriNumber": {
            "type": "string"
          }
        }
      },
      "Delivery-shipment-write": {
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-shipment-write"
          },
          "vatNumber": {
            "type": "string"
          },
          "eoriNumber": {
            "type": "string"
          }
        }
      },
      "Delivery-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-unassigned-item-read"
          }
        }
      },
      "Depot": {
        "required": ["description", "distributor"],
        "type": "object",
        "properties": {
          "region": {
            "type": "string",
            "format": "iri-reference"
          },
          "key": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "vehicles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "required": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Depot-transport-depot-collection-read": {
        "required": ["description", "distributor"],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "distributor": {
            "$ref": "#/components/schemas/Distributor-transport-depot-collection-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-depot-collection-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-depot-collection-read"
          },
          "required": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Depot-transport-depot-collection-write": {
        "required": ["description", "distributor"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-depot-collection-write"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-depot-collection-write"
          },
          "required": {
            "type": "boolean"
          }
        }
      },
      "Depot-transport-depot-item-read": {
        "required": ["description", "distributor"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "distributor": {
            "$ref": "#/components/schemas/Distributor-transport-depot-item-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-depot-item-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-depot-item-read"
          },
          "required": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Depot-transport-depot-item-write": {
        "required": ["description", "distributor"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-depot-item-write"
          },
          "required": {
            "type": "boolean"
          }
        }
      },
      "Depot-transport-pickup-collection-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Depot-transport-pickup_schedule-collection-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Depot-transport-pickup_schedule-item-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Depot-transport-region-collection-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Depot-transport-region-item-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Depot-transport-route_collection-collection-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "region": {
            "$ref": "#/components/schemas/Region-transport-route_collection-collection-read"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Depot-transport-route_collection-item-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Depot-transport-step-collection-read": {
        "required": ["description", "distributor"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Depot-transport-unassigned-item-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Depot-transport-vehicle-collection-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Depot-transport-vehicle-item-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Depot-transport-vehicle-item-write": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Dimensions": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "longestSideProperty": {
            "type": "string",
            "readOnly": true
          },
          "longestSide": {
            "type": "number",
            "readOnly": true
          },
          "volume": {
            "type": "number",
            "readOnly": true
          }
        }
      },
      "Dimensions-ScanInbound.Read": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      },
      "Dimensions-ScanInbound.Write": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      },
      "Dimensions-matrix-group-item-read": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      },
      "Dimensions-matrix-group-read": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      },
      "Dimensions-matrix-item-read": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      },
      "Dimensions-matrix-read": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      },
      "Dimensions-order-item-read": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      },
      "Dimensions-order-write": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      },
      "Dimensions-shipment-item-read": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      },
      "Dimensions-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      },
      "Dimensions-shipment-write": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      },
      "Dimensions-shipment_item-item-read": {
        "type": "object",
        "properties": {
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      },
      "Dispatch": {
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "vatNumber": {
            "type": "string"
          },
          "eoriNumber": {
            "type": "string"
          }
        }
      },
      "Dispatch-shipment-collection-read": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-shipment-collection-read"
          }
        }
      },
      "Dispatch-shipment-item-read": {
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-shipment-item-read"
          },
          "vatNumber": {
            "type": "string"
          },
          "eoriNumber": {
            "type": "string"
          }
        }
      },
      "Dispatch-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-shipment-quotation-item-read"
          },
          "vatNumber": {
            "type": "string"
          },
          "eoriNumber": {
            "type": "string"
          }
        }
      },
      "Dispatch-shipment-write": {
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-shipment-write"
          },
          "vatNumber": {
            "type": "string"
          },
          "eoriNumber": {
            "type": "string"
          }
        }
      },
      "Dispatch-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-unassigned-item-read"
          }
        }
      },
      "Distributor-ScanInbound.Read": {
        "required": ["code", "name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "maxLength": 12,
            "type": "string"
          }
        }
      },
      "Distributor-distributor-collection-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Distributor-distributor-item-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Distributor-shipment-quotation-item-read": {
        "required": ["code", "name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "maxLength": 12,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Distributor-transport-depot-collection-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Distributor-transport-depot-item-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Driver-transport-driver-collection-read": {
        "required": [
          "availableDays",
          "employmentStartedAt",
          "firstName",
          "lastName",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "firstName": {
            "type": "string"
          },
          "lastNamePrefix": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-driver-collection-read"
          },
          "availableDays": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "employmentStartedAt": {
            "type": "string",
            "format": "date-time"
          },
          "employmentEndedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Driver-transport-driver-collection-write": {
        "required": [
          "availableDays",
          "employmentStartedAt",
          "firstName",
          "lastName",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastNamePrefix": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-driver-collection-write"
          },
          "availableDays": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "employmentStartedAt": {
            "type": "string",
            "format": "date-time"
          },
          "employmentEndedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Driver-transport-driver-item-read": {
        "required": [
          "availableDays",
          "employmentStartedAt",
          "firstName",
          "lastName",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "firstName": {
            "type": "string"
          },
          "lastNamePrefix": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-driver-item-read"
          },
          "availableDays": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "employmentStartedAt": {
            "type": "string",
            "format": "date-time"
          },
          "employmentEndedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Driver-transport-driver-item-write": {
        "required": [
          "availableDays",
          "employmentStartedAt",
          "firstName",
          "lastName",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastNamePrefix": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-driver-item-write"
          },
          "availableDays": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "employmentStartedAt": {
            "type": "string",
            "format": "date-time"
          },
          "employmentEndedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Driver-transport-route-collection-read": {
        "required": ["phoneNumber"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-route-collection-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Driver-transport-route-item-read": {
        "required": ["phoneNumber"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-route-item-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Driver-transport-route_collection-item-read": {
        "required": ["phoneNumber"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-route_collection-item-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExcludedPickup-transport-excluded_pickup-collection-read": {
        "required": ["date", "description"],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExcludedPickup-transport-excluded_pickup-collection-write": {
        "required": ["date", "description"],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ExcludedPickup-transport-excluded_pickup-item-read": {
        "required": ["date", "description"],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExcludedPickup-transport-excluded_pickup-item-write": {
        "required": ["date", "description"],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ExpressionRule": {
        "type": "object",
        "properties": {
          "shipment": {
            "type": "string"
          },
          "rate": {
            "type": "string"
          },
          "item": {
            "type": "string"
          }
        }
      },
      "ExternalOrder-order-collection-read": {
        "required": ["createdAtSource"],
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "createdAtSource": {
            "type": "string",
            "format": "date-time"
          },
          "archived": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        },
        "description": "Create this index manually! Created_at must be DESC, also, recreate on MySQL 8."
      },
      "ExternalOrder-order-item-read": {
        "required": ["createdAtSource"],
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalOrderLine-order-item-read"
            }
          },
          "createdAtSource": {
            "type": "string",
            "format": "date-time"
          },
          "shipTo": {
            "$ref": "#/components/schemas/ExternalOrderShipTo-order-item-read"
          },
          "shipments": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "archived": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        },
        "description": "Create this index manually! Created_at must be DESC, also, recreate on MySQL 8."
      },
      "ExternalOrder-order-write": {
        "required": ["createdAtSource"],
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalOrderLine-order-write"
            }
          },
          "createdAtSource": {
            "type": "string",
            "format": "date-time"
          },
          "shipTo": {
            "$ref": "#/components/schemas/ExternalOrderShipTo-order-write"
          }
        },
        "description": "Create this index manually! Created_at must be DESC, also, recreate on MySQL 8."
      },
      "ExternalOrderContact-order-item-read": {
        "type": "object",
        "properties": {
          "plainPhoneNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          }
        }
      },
      "ExternalOrderContact-order-write": {
        "type": "object",
        "properties": {
          "plainPhoneNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          }
        }
      },
      "ExternalOrderLine-order-item-read": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions-order-item-read"
          },
          "weight": {
            "type": "number"
          },
          "value": {
            "type": "number"
          },
          "tariffNumber": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "ExternalOrderLine-order-write": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions-order-write"
          },
          "weight": {
            "type": "number"
          },
          "value": {
            "type": "number"
          },
          "tariffNumber": {
            "type": "string"
          }
        }
      },
      "ExternalOrderShipTo-order-item-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/ExternalOrderContact-order-item-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-order-item-read"
          }
        }
      },
      "ExternalOrderShipTo-order-write": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/ExternalOrderContact-order-write"
          },
          "address": {
            "$ref": "#/components/schemas/Address-order-write"
          }
        }
      },
      "File": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "originalName": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "width": {
            "type": "integer",
            "description": "A simple shortcut to the image width.",
            "readOnly": true
          },
          "height": {
            "type": "integer",
            "description": "A simple shortcut to the image height.",
            "readOnly": true
          },
          "htmlDimensions": {
            "type": "string",
            "description": "Format image dimensions for use with html (to avoid layout shifting).",
            "readOnly": true
          }
        }
      },
      "Fulfilment": {
        "type": "object",
        "properties": {
          "instructions": {
            "maxLength": 500,
            "type": "string"
          }
        }
      },
      "Fulfilment-shipment-item-read": {
        "type": "object",
        "properties": {
          "instructions": {
            "maxLength": 500,
            "type": "string"
          }
        }
      },
      "Fulfilment-shipment-write": {
        "type": "object",
        "properties": {
          "instructions": {
            "maxLength": 500,
            "type": "string"
          }
        }
      },
      "Fulfilment-transport-warehouse_waybill_info-read": {
        "type": "object",
        "properties": {
          "instructions": {
            "maxLength": 500,
            "type": "string"
          }
        }
      },
      "Grant": {
        "type": "object"
      },
      "Group": {
        "required": ["description", "sequence"],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "sequence": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Insurance": {
        "type": "object",
        "properties": {
          "deductibleExcess": {
            "type": "number"
          },
          "insuredValue": {
            "type": "number"
          }
        }
      },
      "Insurance-shipment-item-read": {
        "type": "object",
        "properties": {
          "deductibleExcess": {
            "type": "number"
          },
          "insuredValue": {
            "type": "number"
          }
        }
      },
      "Insurance-shipment-write": {
        "type": "object",
        "properties": {
          "deductibleExcess": {
            "type": "number"
          },
          "insuredValue": {
            "type": "number"
          }
        }
      },
      "Integration-integration-collection-read": {
        "type": "object",
        "properties": {
          "externalAccountId": {
            "type": "string"
          },
          "shopUrl": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Integration-integration-item-read": {
        "type": "object",
        "properties": {
          "externalAccountId": {
            "type": "string"
          },
          "shopUrl": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string"
          },
          "batch": {
            "$ref": "#/components/schemas/InvoiceBatch"
          },
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "ledger": {
            "$ref": "#/components/schemas/Ledger"
          },
          "shipments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "bulkShipments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "exactSalesInvoiceId": {
            "type": "string"
          },
          "number": {
            "type": "integer"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number"
          },
          "difference": {
            "type": "number"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "relationPaths": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "InvoiceBatch": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "new",
            "default": "new"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "frequency": {
            "type": "string"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Item-ScanInbound.Read": {
        "type": "object",
        "properties": {
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions-ScanInbound.Read"
          },
          "weight": {
            "type": "string",
            "example": "0.0",
            "default": "0.0"
          }
        },
        "description": ""
      },
      "Item-shipment-item-read": {
        "type": "object",
        "properties": {
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Content-shipment-item-read"
            }
          },
          "quantity": {
            "type": "integer",
            "example": 1
          },
          "type": {
            "$ref": "#/components/schemas/Type-shipment-item-read"
          },
          "stackable": {
            "type": "boolean"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions-shipment-item-read"
          },
          "weight": {
            "type": "string",
            "example": "0.0",
            "default": "0.0"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "customerReference": {
            "type": "string"
          },
          "customerReference2": {
            "type": "string"
          },
          "tariffNumber": {
            "type": "string"
          },
          "countryOfOrigin": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Item-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "example": 1
          },
          "type": {
            "type": "string",
            "format": "iri-reference"
          },
          "stackable": {
            "type": "boolean"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions-shipment-quotation-item-read"
          },
          "weight": {
            "type": "string",
            "example": "0.0",
            "default": "0.0"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "customerReference": {
            "type": "string"
          },
          "tariffNumber": {
            "type": "string"
          },
          "countryOfOrigin": {
            "type": "string"
          }
        }
      },
      "Item-shipment-write": {
        "type": "object",
        "properties": {
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Content-shipment-write"
            }
          },
          "quantity": {
            "type": "integer",
            "example": 1
          },
          "type": {
            "type": "string",
            "format": "iri-reference"
          },
          "stackable": {
            "type": "boolean"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions-shipment-write"
          },
          "weight": {
            "type": "string",
            "example": "0.0",
            "default": "0.0"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "customerReference": {
            "type": "string"
          },
          "customerReference2": {
            "type": "string"
          },
          "tariffNumber": {
            "type": "string"
          },
          "countryOfOrigin": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Item-shipment_item-item-read": {
        "type": "object",
        "properties": {
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Content-shipment_item-item-read"
            }
          },
          "quantity": {
            "type": "integer",
            "example": 1
          },
          "type": {
            "type": "string",
            "format": "iri-reference"
          },
          "stackable": {
            "type": "boolean"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions-shipment_item-item-read"
          },
          "weight": {
            "type": "string",
            "example": "0.0",
            "default": "0.0"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "customerReference": {
            "type": "string"
          },
          "customerReference2": {
            "type": "string"
          },
          "tariffNumber": {
            "type": "string"
          },
          "countryOfOrigin": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Label": {
        "type": "object",
        "properties": {
          "shipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "trackings": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "waybill": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "mailSentAt": {
            "type": "string",
            "format": "date-time"
          },
          "podAvailable": {
            "type": "boolean"
          },
          "distributorHasPodAvailable": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "receiverName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "nextTrackingUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "lastProcessedTime": {
            "type": "string",
            "format": "date-time"
          },
          "transportTasks": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "trackAndTraceLink": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "relationPaths": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "shipmentItem": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "mailSent": {
            "type": "boolean",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Label-ScanInbound.Read": {
        "type": "object",
        "properties": {
          "shipment": {
            "$ref": "#/components/schemas/Shipment-ScanInbound.Read"
          },
          "waybill": {
            "type": "string"
          },
          "shipmentItem": {
            "$ref": "#/components/schemas/Item-ScanInbound.Read"
          }
        },
        "description": ""
      },
      "Label-label-read": {
        "type": "object",
        "properties": {
          "waybill": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Label-shipment-item-read": {
        "type": "object",
        "properties": {
          "waybill": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "trackAndTraceLink": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Label-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object",
        "properties": {
          "shipment": {
            "$ref": "#/components/schemas/Shipment-transport-task-collection-read_transport-task_label-collection-read"
          },
          "waybill": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Label-transport-task-item-read": {
        "type": "object",
        "properties": {
          "shipment": {
            "$ref": "#/components/schemas/Shipment-transport-task-item-read"
          },
          "waybill": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Label-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "waybill": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Ledger": {
        "required": ["code", "description"],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "distributors": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "exactId": {
            "type": "string"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Load": {
        "type": "object",
        "properties": {
          "packages": {
            "type": "integer"
          },
          "volume": {
            "type": "integer"
          },
          "loadingMeters": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          }
        }
      },
      "Load-transport-route-item-read": {
        "type": "object",
        "properties": {
          "packages": {
            "type": "integer"
          },
          "volume": {
            "type": "integer"
          },
          "loadingMeters": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          }
        }
      },
      "Load-transport-route_collection-item-read": {
        "type": "object",
        "properties": {
          "packages": {
            "type": "integer"
          },
          "volume": {
            "type": "integer"
          },
          "loadingMeters": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          }
        }
      },
      "Load-transport-step-collection-read": {
        "type": "object",
        "properties": {
          "packages": {
            "type": "integer"
          },
          "volume": {
            "type": "integer"
          },
          "loadingMeters": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          }
        }
      },
      "Load-transport-vehicle-collection-read": {
        "type": "object"
      },
      "Load-transport-vehicle-collection-write": {
        "type": "object",
        "properties": {
          "packages": {
            "type": "integer"
          },
          "volume": {
            "type": "integer"
          },
          "loadingMeters": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          }
        }
      },
      "Load-transport-vehicle-item-read": {
        "type": "object",
        "properties": {
          "packages": {
            "type": "integer"
          },
          "volume": {
            "type": "integer"
          },
          "loadingMeters": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          }
        }
      },
      "Load-transport-vehicle-item-write": {
        "type": "object",
        "properties": {
          "packages": {
            "type": "integer"
          },
          "volume": {
            "type": "integer"
          },
          "loadingMeters": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          }
        }
      },
      "LocationDetails-firebase.transport-position.write": {
        "type": "object",
        "properties": {
          "coordinates": {
            "$ref": "#/components/schemas/Point-firebase.transport-position.write"
          },
          "bearing": {
            "type": "number"
          },
          "speed": {
            "type": "number"
          },
          "datetime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Matrix-matrix-group-item-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatrixRate-matrix-group-item-read"
            }
          },
          "maxDimensions": {
            "$ref": "#/components/schemas/Dimensions-matrix-group-item-read"
          },
          "maxWeight": {
            "type": "number"
          },
          "active": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Matrix-matrix-group-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatrixRate-matrix-group-read"
            }
          },
          "maxDimensions": {
            "$ref": "#/components/schemas/Dimensions-matrix-group-read"
          },
          "maxWeight": {
            "type": "number"
          },
          "active": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Matrix-matrix-item-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "format": "iri-reference"
          },
          "name": {
            "type": "string"
          },
          "rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatrixRate-matrix-item-read"
            }
          },
          "maxDimensions": {
            "$ref": "#/components/schemas/Dimensions-matrix-item-read"
          },
          "maxWeight": {
            "type": "number"
          },
          "active": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Matrix-matrix-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "format": "iri-reference"
          },
          "name": {
            "type": "string"
          },
          "rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatrixRate-matrix-read"
            }
          },
          "maxDimensions": {
            "$ref": "#/components/schemas/Dimensions-matrix-read"
          },
          "maxWeight": {
            "type": "number"
          },
          "active": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MatrixGroup-matrix-group-item-read": {
        "required": ["name", "relation"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "matrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Matrix-matrix-group-item-read"
            }
          },
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "postcodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatrixPostcode-matrix-group-item-read"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MatrixGroup-matrix-group-read": {
        "required": ["name", "relation"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "matrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Matrix-matrix-group-read"
            }
          },
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "postcodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatrixPostcode-matrix-group-read"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MatrixPostcode-matrix-group-item-read": {
        "required": ["country"],
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "format": "iri-reference"
          },
          "ranges": {
            "type": "array",
            "description": "Range of the postcode where ranges are separated by a comma. Ranges can be defined by a dash e.g. 1000-1100 or a single postcode.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MatrixPostcode-matrix-group-read": {
        "required": ["country"],
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "format": "iri-reference"
          },
          "ranges": {
            "type": "array",
            "description": "Range of the postcode where ranges are separated by a comma. Ranges can be defined by a dash e.g. 1000-1100 or a single postcode.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MatrixPostcode-matrix-postcode-item-read": {
        "type": "object"
      },
      "MatrixPostcode-matrix-postcode-read": {
        "type": "object"
      },
      "MatrixRate-matrix-group-item-read": {
        "required": ["service"],
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/Service-matrix-group-item-read"
          },
          "price": {
            "type": "number"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "MatrixRate-matrix-group-read": {
        "required": ["service"],
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/Service-matrix-group-read"
          },
          "price": {
            "type": "number"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "MatrixRate-matrix-item-read": {
        "required": ["service"],
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/Service-matrix-item-read"
          },
          "price": {
            "type": "number"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "MatrixRate-matrix-rate-item-read": {
        "type": "object"
      },
      "MatrixRate-matrix-rate-read": {
        "type": "object"
      },
      "MatrixRate-matrix-read": {
        "required": ["service"],
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/Service-matrix-read"
          },
          "price": {
            "type": "number"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Message": {
        "required": ["text"],
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "employee": {
            "type": "string",
            "format": "iri-reference"
          },
          "conversation": {
            "type": "string",
            "format": "iri-reference"
          },
          "internal": {
            "type": "boolean"
          },
          "text": {
            "type": "string"
          },
          "readByUser": {
            "type": "boolean"
          },
          "readByEmployee": {
            "type": "boolean"
          },
          "notificationSent": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "excerpt": {
            "type": "string",
            "readOnly": true
          },
          "relationPaths": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Message-message-patch": {
        "required": ["text"],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          }
        }
      },
      "Message-message-read": {
        "type": "object"
      },
      "Message-message-write": {
        "required": ["text"],
        "type": "object",
        "properties": {
          "conversation": {
            "type": "string",
            "format": "iri-reference"
          },
          "internal": {
            "type": "boolean"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "shipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "key": {
            "maxLength": 32,
            "type": "string"
          },
          "value": {
            "maxLength": 64,
            "type": "string"
          }
        }
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "integer",
            "description": "The country calling code for this number, as defined by the International Telecommunication Union\n(ITU). For example, this would be 1 for NANPA countries, and 33 for France."
          },
          "nationalNumber": {
            "type": "string",
            "description": "National (significant) Number is defined in International Telecommunication Union (ITU)\nRecommendation E.164. It is a language/country-neutral representation of a phone number at a\ncountry level. For countries which have the concept of an \"area code\" or \"national destination\ncode\", this is included in the National (significant) Number. Although the ITU says the maximum\nlength should be 15, we have found longer numbers in some countries e.g. Germany."
          },
          "extension": {
            "type": "string",
            "description": "Extension is not standardized in ITU recommendations, except for being defined as a series of\nnumbers with a maximum length of 40 digits. It is defined as a string here to accommodate for the\npossible use of a leading zero in the extension (organizations have complete freedom to do so,\nas there is no standard defined). However, only ASCII digits should be stored here."
          },
          "italianLeadingZero": {
            "type": "boolean",
            "description": "In some countries, the national (significant) number starts with one or more \"0\"s without this\nbeing a national prefix or trunk code of some kind. For example, the leading zero in the national\n(significant) number of an Italian phone number indicates the number is a fixed-line number."
          },
          "rawInput": {
            "type": "string",
            "description": "This field is used to store the raw input string containing phone numbers before it was\ncanonicalized by the library. For example, it could be used to store alphanumerical numbers\nsuch as \"1-800-GOOG-411\"."
          },
          "countryCodeSource": {
            "type": "integer",
            "description": "The source from which the country_code is derived. This is not set in the general parsing method,\nbut in the method that parses and keeps raw_input. New fields could be added upon request.",
            "example": 4
          },
          "preferredDomesticCarrierCode": {
            "type": "string",
            "description": "The carrier selection code that is preferred when calling this phone number domestically. This\nalso includes codes that need to be dialed in some countries when calling from landlines to\nmobiles or vice versa. For example, in Columbia, a \"3\" needs to be dialed before the phone number\nitself when calling from a mobile phone to a domestic landline phone and vice versa."
          },
          "hasNumberOfLeadingZeros": {
            "type": "boolean",
            "description": "Whether this phone number has a number of leading zeros set.",
            "readOnly": true
          },
          "numberOfLeadingZeros": {
            "type": "integer",
            "description": "The number of leading zeros of this phone number.",
            "example": 1
          }
        }
      },
      "PhoneNumber-address_book-collection-read": {
        "type": "object"
      },
      "PhoneNumber-address_book-item-read": {
        "type": "object"
      },
      "PhoneNumber-shipment-item-read": {
        "type": "object"
      },
      "PhoneNumber-shipment-quotation-item-read": {
        "type": "object"
      },
      "PhoneNumber-shipment-write": {
        "type": "object"
      },
      "PhoneNumber-transport-driver-collection-read": {
        "type": "object"
      },
      "PhoneNumber-transport-driver-collection-write": {
        "type": "object"
      },
      "PhoneNumber-transport-driver-item-read": {
        "type": "object"
      },
      "PhoneNumber-transport-driver-item-write": {
        "type": "object"
      },
      "PhoneNumber-transport-route-collection-read": {
        "type": "object"
      },
      "PhoneNumber-transport-route-item-read": {
        "type": "object"
      },
      "PhoneNumber-transport-route_collection-item-read": {
        "type": "object"
      },
      "PhoneNumber-transport-step-collection-read": {
        "type": "object"
      },
      "PhoneNumber-transport-task-collection-read": {
        "type": "object"
      },
      "PhoneNumber-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object"
      },
      "PhoneNumber-transport-task-item-read": {
        "type": "object"
      },
      "PhoneNumber-transport-vehicle-collection-read": {
        "type": "object"
      },
      "PhoneNumber-transport-vehicle-collection-write": {
        "type": "object"
      },
      "PhoneNumber-transport-vehicle-item-read": {
        "type": "object"
      },
      "PhoneNumber-transport-vehicle-item-write": {
        "type": "object"
      },
      "Pickup-transport-pickup-collection-read": {
        "required": ["addressBookItem"],
        "type": "object",
        "properties": {
          "addressBookItem": {
            "$ref": "#/components/schemas/AddressBookItems-transport-pickup-collection-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-pickup-collection-read"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-pickup-collection-read"
          },
          "depots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Depot-transport-pickup-collection-read"
            }
          }
        }
      },
      "Pickup-transport-pickup-item-read": {
        "required": ["addressBookItem"],
        "type": "object",
        "properties": {
          "addressBookItem": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-pickup-item-read"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-pickup-item-read"
          },
          "depots": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Pickup-transport-unassigned-item-read": {
        "required": ["addressBookItem"],
        "type": "object",
        "properties": {
          "addressBookItem": {
            "$ref": "#/components/schemas/AddressBookItems-transport-unassigned-item-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-unassigned-item-read"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-unassigned-item-read"
          },
          "depots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Depot-transport-unassigned-item-read"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "PickupPoint": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "distributorCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string",
            "readOnly": true
          },
          "formattedAddress": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "PickupPoint-shipment-item-read": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "distributorCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        }
      },
      "PickupPoint-shipment-write": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "distributorCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        }
      },
      "PickupRequest-pickup_request-collection-read": {
        "required": [
          "distributor",
          "pickupAddress",
          "pickupAt",
          "quantity",
          "relation"
        ],
        "type": "object",
        "properties": {
          "relation": {
            "$ref": "#/components/schemas/Relation-pickup_request-collection-read"
          },
          "user": {
            "$ref": "#/components/schemas/User-pickup_request-collection-read"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "pickupAddress": {
            "$ref": "#/components/schemas/AddressBookItems-pickup_request-collection-read"
          },
          "pickupAt": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of items inserted by the user through manual pickup request."
          },
          "pickup": {
            "type": "string",
            "format": "iri-reference"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PickupRequest-pickup_request-collection-write": {
        "required": [
          "distributor",
          "pickupAddress",
          "pickupAt",
          "quantity",
          "relation"
        ],
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "pickupAddress": {
            "type": "string",
            "format": "iri-reference"
          },
          "pickupAt": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of items inserted by the user through manual pickup request."
          },
          "pickup": {
            "type": "string",
            "format": "iri-reference"
          }
        }
      },
      "PickupRequest-pickup_request-item-read": {
        "required": [
          "distributor",
          "pickupAddress",
          "pickupAt",
          "quantity",
          "relation"
        ],
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "pickupAddress": {
            "type": "string",
            "format": "iri-reference"
          },
          "pickupAt": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of items inserted by the user through manual pickup request."
          },
          "pickup": {
            "type": "string",
            "format": "iri-reference"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PickupRequest-pickup_request-item-write": {
        "required": [
          "distributor",
          "pickupAddress",
          "pickupAt",
          "quantity",
          "relation"
        ],
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "pickupAddress": {
            "type": "string",
            "format": "iri-reference"
          },
          "pickupAt": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of items inserted by the user through manual pickup request."
          },
          "pickup": {
            "type": "string",
            "format": "iri-reference"
          }
        }
      },
      "PickupSchedule": {
        "required": ["addressBookItem"],
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "days": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vehicles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "arriveEmpty": {
            "type": "boolean"
          },
          "addressBookItem": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "depots": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "transportTasks": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PickupSchedule-transport-pickup_schedule-collection-read": {
        "required": ["addressBookItem"],
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "days": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vehicle-transport-pickup_schedule-collection-read"
            }
          },
          "arriveEmpty": {
            "type": "boolean"
          },
          "addressBookItem": {
            "$ref": "#/components/schemas/AddressBookItems-transport-pickup_schedule-collection-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-pickup_schedule-collection-read"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-pickup_schedule-collection-read"
          },
          "depots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Depot-transport-pickup_schedule-collection-read"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PickupSchedule-transport-pickup_schedule-collection-write": {
        "required": ["addressBookItem"],
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "days": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vehicles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "arriveEmpty": {
            "type": "boolean"
          },
          "addressBookItem": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-pickup_schedule-collection-write"
          },
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "depots": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "PickupSchedule-transport-pickup_schedule-item-read": {
        "required": ["addressBookItem"],
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "days": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vehicles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "arriveEmpty": {
            "type": "boolean"
          },
          "addressBookItem": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-pickup_schedule-item-read"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-pickup_schedule-item-read"
          },
          "depots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Depot-transport-pickup_schedule-item-read"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PickupSchedule-transport-pickup_schedule-item-write": {
        "required": ["addressBookItem"],
        "type": "object",
        "properties": {
          "instructions": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "days": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vehicles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "arriveEmpty": {
            "type": "boolean"
          },
          "addressBookItem": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-pickup_schedule-item-write"
          },
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "depots": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Point": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "description": "The X coordinate or the longitude."
          },
          "y": {
            "type": "number",
            "description": "The Y coordinate or the latitude."
          },
          "srid": {
            "type": "integer",
            "description": "Spatial Reference System Identifier."
          },
          "latitude": {
            "type": "number",
            "description": "Latitude getter."
          },
          "longitude": {
            "type": "number",
            "description": "Longitude getter."
          },
          "type": {
            "type": "string",
            "description": "Type getter.",
            "readOnly": true
          }
        }
      },
      "Point-firebase.transport-position.write": {
        "type": "object"
      },
      "Point-pickup_request-collection-read": {
        "type": "object"
      },
      "Point-shipment-collection-read": {
        "type": "object"
      },
      "Point-transport-depot-collection-read": {
        "type": "object"
      },
      "Point-transport-depot-collection-write": {
        "type": "object"
      },
      "Point-transport-depot-item-read": {
        "type": "object"
      },
      "Point-transport-depot-item-write": {
        "type": "object"
      },
      "Point-transport-pickup_schedule-collection-read": {
        "type": "object"
      },
      "Point-transport-route-item-read": {
        "type": "object"
      },
      "Point-transport-step-collection-read": {
        "type": "object"
      },
      "Point-transport-task-collection-read": {
        "type": "object"
      },
      "Point-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object"
      },
      "Point-transport-task-item-read": {
        "type": "object"
      },
      "Position-firebase.transport-position.write": {
        "type": "object",
        "properties": {
          "vehicle": {
            "type": "string",
            "format": "iri-reference"
          },
          "route": {
            "type": "string",
            "format": "iri-reference"
          },
          "locationDetails": {
            "$ref": "#/components/schemas/LocationDetails-firebase.transport-position.write"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Postcode-Api.BuzziePostcode": {
        "required": ["postcode"],
        "type": "object",
        "properties": {
          "postcode": {
            "type": "integer"
          }
        }
      },
      "Postcode-transport-postcode-collection-read": {
        "required": ["postcode"],
        "type": "object",
        "properties": {
          "region": {
            "$ref": "#/components/schemas/Region-transport-postcode-collection-read"
          },
          "postcode": {
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          },
          "preferCar": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Postcode-transport-postcode-collection-write": {
        "required": ["postcode"],
        "type": "object",
        "properties": {
          "region": {
            "type": "string",
            "format": "iri-reference"
          },
          "postcode": {
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          },
          "preferCar": {
            "type": "boolean"
          }
        }
      },
      "Postcode-transport-postcode-item-read": {
        "required": ["postcode"],
        "type": "object",
        "properties": {
          "region": {
            "$ref": "#/components/schemas/Region-transport-postcode-item-read"
          },
          "postcode": {
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          },
          "preferCar": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Postcode-transport-postcode-item-write": {
        "required": ["postcode"],
        "type": "object",
        "properties": {
          "region": {
            "$ref": "#/components/schemas/Region-transport-postcode-item-write"
          },
          "postcode": {
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          },
          "preferCar": {
            "type": "boolean"
          }
        }
      },
      "PriceRules": {
        "required": ["conditions", "description", "discountType"],
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "surchargeSet": {
            "type": "string",
            "format": "iri-reference"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "discountType": {
            "type": "string"
          },
          "discountPercentage": {
            "type": "number"
          },
          "fixedPrice": {
            "type": "number"
          },
          "conditions": {
            "type": "string"
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time"
          },
          "activeUntil": {
            "type": "string",
            "format": "date-time"
          },
          "internalRemark": {
            "type": "string"
          },
          "expressionRule": {
            "$ref": "#/components/schemas/ExpressionRule"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "conditionsAsObject": {
            "type": "string",
            "readOnly": true
          },
          "discountTypes": {
            "type": "object",
            "readOnly": true
          },
          "discountPercentageType": {
            "type": "boolean",
            "readOnly": true
          },
          "fixedPriceType": {
            "type": "boolean",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "PrintProfile": {
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "description": {
            "maxLength": 100,
            "type": "string"
          },
          "amountPerPage": {
            "type": "integer"
          },
          "margins": {
            "type": "integer"
          },
          "userDefaults": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "printers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Printer"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Printer": {
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "printProfile": {
            "$ref": "#/components/schemas/PrintProfile"
          },
          "printNodeId": {
            "type": "integer"
          },
          "computer": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "userDefaults": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "RateInterface": {
        "type": "object",
        "properties": {
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string"
          },
          "pricelistId": {
            "type": "string",
            "format": "uuid"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "service": {
            "type": "string",
            "format": "iri-reference"
          },
          "price": {
            "type": "number"
          },
          "priceIncl": {
            "type": "number",
            "readOnly": true
          },
          "tax": {
            "type": "number",
            "readOnly": true
          },
          "vat": {
            "$ref": "#/components/schemas/Vat"
          },
          "basePrice": {
            "type": "number",
            "readOnly": true
          },
          "basePriceIncl": {
            "type": "number",
            "readOnly": true
          },
          "baseTaxPrice": {
            "type": "number",
            "readOnly": true
          },
          "totalPrice": {
            "type": "number",
            "readOnly": true
          },
          "totalTax": {
            "type": "number",
            "readOnly": true
          },
          "totalPriceIncl": {
            "type": "number",
            "readOnly": true
          },
          "surcharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateSurchargeInterface"
            }
          },
          "nonManualSurcharges": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/RateSurchargeInterface"
            }
          },
          "manualSurcharges": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/RateSurchargeInterface"
            }
          },
          "energySurcharge": {
            "$ref": "#/components/schemas/RateSurchargeInterface"
          },
          "description": {
            "type": "string",
            "readOnly": true
          },
          "remark": {
            "type": "string"
          },
          "priceRule": {
            "$ref": "#/components/schemas/PriceRules"
          },
          "processingDays": {
            "type": "string"
          },
          "expectedDelivery": {
            "type": "string",
            "format": "date-time"
          },
          "departures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "departuresAsString": {
            "type": "string",
            "readOnly": true
          },
          "onRequest": {
            "type": "boolean"
          },
          "manual": {
            "type": "boolean"
          },
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "subject": {
            "$ref": "#/components/schemas/ShipmentInterface"
          }
        }
      },
      "RateSurchargeInterface": {
        "type": "object",
        "properties": {
          "rate": {
            "$ref": "#/components/schemas/RateInterface"
          },
          "price": {
            "type": "number"
          },
          "vat": {
            "$ref": "#/components/schemas/Vat"
          },
          "priceIncl": {
            "type": "number",
            "readOnly": true
          },
          "tax": {
            "type": "number",
            "readOnly": true
          },
          "description": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "surchargeSet": {
            "type": "string",
            "format": "iri-reference"
          },
          "surcharge": {
            "$ref": "#/components/schemas/Surcharge"
          },
          "insurance": {
            "type": "boolean",
            "readOnly": true
          },
          "energy": {
            "type": "boolean",
            "readOnly": true
          },
          "onRequest": {
            "type": "boolean"
          }
        }
      },
      "RecomputeType-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object"
      },
      "RedirectUri": {
        "type": "object"
      },
      "Referral": {
        "required": ["code", "relation"],
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "code": {
            "maxLength": 40,
            "minLength": 6,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAfter": {
            "type": "string",
            "format": "duration"
          },
          "remark": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Region": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "depot": {
            "$ref": "#/components/schemas/Depot"
          },
          "postcodes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Region-transport-postcode-collection-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Region-transport-postcode-item-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Region-transport-postcode-item-write": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Region-transport-region-collection-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "depot": {
            "$ref": "#/components/schemas/Depot-transport-region-collection-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Region-transport-region-collection-write": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "depot": {
            "type": "string",
            "format": "iri-reference"
          }
        }
      },
      "Region-transport-region-item-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "depot": {
            "$ref": "#/components/schemas/Depot-transport-region-item-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Region-transport-route_collection-collection-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Relation-pickup_request-collection-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Relation-relation-collection-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Relation-relation-item-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "conversation": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Relation-shipment-collection-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Relation-transport-pickup-collection-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Relation-transport-pickup-item-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Relation-transport-pickup_schedule-collection-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Relation-transport-pickup_schedule-item-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Relation-transport-route_collection-item-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Relation-transport-task-collection-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Relation-transport-task-collection-read_transport-task_label-collection-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Relation-transport-task-item-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Relation-transport-unassigned-item-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Relation-transport-warehouse_waybill_info-read": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Relation-user-item-read": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Route": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "string",
            "format": "iri-reference"
          },
          "sequence": {
            "type": "integer"
          },
          "vehicle": {
            "type": "string",
            "format": "iri-reference"
          },
          "driver": {
            "type": "string",
            "format": "iri-reference"
          },
          "coDriver": {
            "type": "string",
            "format": "iri-reference"
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/Summary"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "geometry": {
            "type": "string"
          },
          "syncedAt": {
            "type": "string",
            "format": "date-time"
          },
          "chute": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Route-shipment-collection-read": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/RouteCollection-shipment-collection-read"
          },
          "sequence": {
            "type": "integer"
          }
        }
      },
      "Route-transport-route-collection-read": {
        "type": "object",
        "properties": {
          "collection": {
            "type": "string",
            "format": "iri-reference"
          },
          "sequence": {
            "type": "integer"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle-transport-route-collection-read"
          },
          "driver": {
            "$ref": "#/components/schemas/Driver-transport-route-collection-read"
          },
          "coDriver": {
            "$ref": "#/components/schemas/Driver-transport-route-collection-read"
          },
          "geometry": {
            "type": "string"
          },
          "syncedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Route-transport-route-item-read": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/RouteCollection-transport-route-item-read"
          },
          "sequence": {
            "type": "integer"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle-transport-route-item-read"
          },
          "driver": {
            "$ref": "#/components/schemas/Driver-transport-route-item-read"
          },
          "coDriver": {
            "$ref": "#/components/schemas/Driver-transport-route-item-read"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Step-transport-route-item-read"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/Summary-transport-route-item-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-route-item-read"
          },
          "geometry": {
            "type": "string"
          },
          "syncedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Route-transport-route-item-write": {
        "type": "object",
        "properties": {
          "sequence": {
            "type": "integer"
          },
          "driver": {
            "type": "string",
            "format": "iri-reference"
          },
          "coDriver": {
            "type": "string",
            "format": "iri-reference"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Step-transport-route-item-write"
            }
          }
        }
      },
      "Route-transport-route_collection-item-read": {
        "type": "object",
        "properties": {
          "sequence": {
            "type": "integer"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle-transport-route_collection-item-read"
          },
          "driver": {
            "$ref": "#/components/schemas/Driver-transport-route_collection-item-read"
          },
          "coDriver": {
            "$ref": "#/components/schemas/Driver-transport-route_collection-item-read"
          },
          "summary": {
            "$ref": "#/components/schemas/Summary-transport-route_collection-item-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-route_collection-item-read"
          },
          "geometry": {
            "type": "string"
          },
          "syncedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Route-transport-task-collection-read": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/RouteCollection-transport-task-collection-read"
          },
          "sequence": {
            "type": "integer"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle-transport-task-collection-read"
          },
          "driver": {
            "type": "string",
            "format": "iri-reference"
          },
          "coDriver": {
            "type": "string",
            "format": "iri-reference"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Route-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/RouteCollection-transport-task-collection-read_transport-task_label-collection-read"
          },
          "sequence": {
            "type": "integer"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle-transport-task-collection-read_transport-task_label-collection-read"
          },
          "driver": {
            "type": "string",
            "format": "iri-reference"
          },
          "coDriver": {
            "type": "string",
            "format": "iri-reference"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Route-transport-task-item-read": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/RouteCollection-transport-task-item-read"
          },
          "sequence": {
            "type": "integer"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle-transport-task-item-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "RouteCollection-shipment-collection-read": {
        "required": ["date"],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RouteCollection-transport-route-item-read": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "new",
            "default": "new"
          }
        }
      },
      "RouteCollection-transport-route_collection-collection-read": {
        "required": ["date"],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "new",
            "default": "new"
          },
          "description": {
            "type": "string"
          },
          "depot": {
            "$ref": "#/components/schemas/Depot-transport-route_collection-collection-read"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "routeCollectionBulks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection-collection-read"
            }
          },
          "routeCollectionVehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection-collection-read"
            }
          },
          "taskExclusions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "vehicleTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requireInbound": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "region": {
            "$ref": "#/components/schemas/Region-transport-route_collection-collection-read"
          }
        }
      },
      "RouteCollection-transport-route_collection-collection-write": {
        "required": ["date"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "depot": {
            "type": "string",
            "format": "iri-reference"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "routeCollectionBulks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection-collection-write"
            }
          },
          "routeCollectionVehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection-collection-write"
            }
          },
          "taskExclusions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "vehicleTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requireInbound": {
            "type": "boolean"
          }
        }
      },
      "RouteCollection-transport-route_collection-item-read": {
        "required": ["date"],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "new",
            "default": "new"
          },
          "description": {
            "type": "string"
          },
          "depot": {
            "$ref": "#/components/schemas/Depot-transport-route_collection-item-read"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "unassigned": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route-transport-route_collection-item-read"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/Summary-transport-route_collection-item-read"
          },
          "computingTimes": {
            "$ref": "#/components/schemas/ComputingTimes-transport-route_collection-item-read"
          },
          "routeCollectionBulks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection-item-read"
            }
          },
          "routeCollectionVehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection-item-read"
            }
          },
          "taskExclusions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "vehicleTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "error": {
            "type": "string"
          },
          "requireInbound": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "region": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          }
        }
      },
      "RouteCollection-transport-route_collection-item-write": {
        "required": ["date"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "depot": {
            "type": "string",
            "format": "iri-reference"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "summary": {
            "$ref": "#/components/schemas/Summary-transport-route_collection-item-write"
          },
          "computingTimes": {
            "$ref": "#/components/schemas/ComputingTimes-transport-route_collection-item-write"
          },
          "routeCollectionBulks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteCollectionBulk-transport-route_collection-item-write"
            }
          },
          "routeCollectionVehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteCollectionVehicle-transport-route_collection-item-write"
            }
          },
          "taskExclusions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "vehicleTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requireInbound": {
            "type": "boolean"
          }
        }
      },
      "RouteCollection-transport-task-collection-read": {
        "required": ["date"],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "RouteCollection-transport-task-collection-read_transport-task_label-collection-read": {
        "required": ["date"],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "RouteCollection-transport-task-item-read": {
        "required": ["date"],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "RouteCollectionBulk": {
        "type": "object",
        "properties": {
          "routeCollection": {
            "type": "string",
            "format": "iri-reference"
          },
          "bulkShipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "priority": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "RouteCollectionBulk-transport-route_collection-collection-read": {
        "type": "object",
        "properties": {
          "bulkShipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "priority": {
            "type": "string"
          }
        }
      },
      "RouteCollectionBulk-transport-route_collection-collection-write": {
        "type": "object",
        "properties": {
          "bulkShipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "priority": {
            "type": "string"
          }
        }
      },
      "RouteCollectionBulk-transport-route_collection-item-read": {
        "type": "object",
        "properties": {
          "bulkShipment": {
            "$ref": "#/components/schemas/BulkShipment-transport-route_collection-item-read"
          },
          "priority": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "RouteCollectionBulk-transport-route_collection-item-write": {
        "type": "object",
        "properties": {
          "bulkShipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "priority": {
            "type": "string"
          }
        }
      },
      "RouteCollectionBulk-transport-route_collection_bulk-collection-read": {
        "type": "object",
        "properties": {
          "routeCollection": {
            "type": "string",
            "format": "iri-reference"
          },
          "bulkShipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "priority": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RouteCollectionBulk-transport-route_collection_bulk-item-read": {
        "type": "object",
        "properties": {
          "routeCollection": {
            "type": "string",
            "format": "iri-reference"
          },
          "bulkShipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "priority": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RouteCollectionBulk-transport-route_collection_bulk-item-write": {
        "type": "object",
        "properties": {
          "routeCollection": {
            "type": "string",
            "format": "iri-reference"
          },
          "bulkShipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "priority": {
            "type": "string"
          }
        }
      },
      "RouteCollectionVehicle": {
        "type": "object",
        "properties": {
          "routeCollection": {
            "type": "string",
            "format": "iri-reference"
          },
          "vehicle": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "skillShipment": {
            "type": "boolean"
          },
          "skillPickup": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "RouteCollectionVehicle-transport-route_collection-collection-read": {
        "type": "object",
        "properties": {
          "vehicle": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-route_collection-collection-read"
          },
          "skillShipment": {
            "type": "boolean"
          },
          "skillPickup": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RouteCollectionVehicle-transport-route_collection-collection-write": {
        "type": "object",
        "properties": {
          "vehicle": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-route_collection-collection-write"
          },
          "skillShipment": {
            "type": "boolean"
          },
          "skillPickup": {
            "type": "boolean"
          }
        }
      },
      "RouteCollectionVehicle-transport-route_collection-item-read": {
        "type": "object",
        "properties": {
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle-transport-route_collection-item-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-route_collection-item-read"
          },
          "skillShipment": {
            "type": "boolean"
          },
          "skillPickup": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RouteCollectionVehicle-transport-route_collection-item-write": {
        "type": "object",
        "properties": {
          "routeCollection": {
            "$ref": "#/components/schemas/RouteCollection-transport-route_collection-item-write"
          },
          "vehicle": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-route_collection-item-write"
          },
          "skillShipment": {
            "type": "boolean"
          },
          "skillPickup": {
            "type": "boolean"
          }
        }
      },
      "RouteCollectionVehicle-transport-route_collection_vehicle-collection-read": {
        "type": "object",
        "properties": {
          "routeCollection": {
            "type": "string",
            "format": "iri-reference"
          },
          "vehicle": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-route_collection_vehicle-collection-read"
          },
          "skillShipment": {
            "type": "boolean"
          },
          "skillPickup": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "RouteCollectionVehicle-transport-route_collection_vehicle-item-read": {
        "type": "object",
        "properties": {
          "routeCollection": {
            "type": "string",
            "format": "iri-reference"
          },
          "vehicle": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-route_collection_vehicle-item-read"
          },
          "skillShipment": {
            "type": "boolean"
          },
          "skillPickup": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "RouteCollectionVehicle-transport-route_collection_vehicle-item-write": {
        "type": "object",
        "properties": {
          "routeCollection": {
            "type": "string",
            "format": "iri-reference"
          },
          "vehicle": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-route_collection_vehicle-item-write"
          },
          "skillShipment": {
            "type": "boolean"
          },
          "skillPickup": {
            "type": "boolean"
          }
        }
      },
      "ScanInbound-ScanInbound.Read": {
        "required": ["depot"],
        "type": "object",
        "properties": {
          "depot": {
            "type": "string",
            "format": "iri-reference"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions-ScanInbound.Read"
          },
          "weight": {
            "type": "integer",
            "description": "gram"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "label": {
            "$ref": "#/components/schemas/Label-ScanInbound.Read"
          },
          "datetime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ScanInbound-ScanInbound.Write": {
        "required": ["data", "depot"],
        "type": "object",
        "properties": {
          "depot": {
            "type": "string",
            "format": "iri-reference"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions-ScanInbound.Write"
          },
          "weight": {
            "type": "integer",
            "description": "gram"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "Scope": {
        "type": "object"
      },
      "Service-ScanInbound.Read": {
        "required": ["distributor"],
        "type": "object",
        "properties": {
          "distributor": {
            "$ref": "#/components/schemas/Distributor-ScanInbound.Read"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          }
        }
      },
      "Service-matrix-group-item-read": {
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 30,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "pickupPoint": {
            "type": "boolean",
            "readOnly": true
          },
          "distributorIdentifier": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Service-matrix-group-read": {
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 30,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "pickupPoint": {
            "type": "boolean",
            "readOnly": true
          },
          "distributorIdentifier": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Service-matrix-item-read": {
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 30,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "pickupPoint": {
            "type": "boolean",
            "readOnly": true
          },
          "distributorIdentifier": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Service-matrix-read": {
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 30,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "pickupPoint": {
            "type": "boolean",
            "readOnly": true
          },
          "distributorIdentifier": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Service-service-item-read": {
        "type": "object",
        "properties": {
          "defaultInsuredValue": {
            "type": "integer"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Service-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 30,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "pickupPoint": {
            "type": "boolean",
            "readOnly": true
          },
          "distributorIdentifier": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ShipFrom": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "country": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ShipFrom-shipment-collection-read": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address-shipment-collection-read"
          }
        }
      },
      "ShipFrom-shipment-item-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-shipment-item-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-shipment-item-read"
          }
        }
      },
      "ShipFrom-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-shipment-quotation-item-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-shipment-quotation-item-read"
          }
        }
      },
      "ShipFrom-shipment-write": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-shipment-write"
          },
          "address": {
            "$ref": "#/components/schemas/Address-shipment-write"
          }
        }
      },
      "ShipFrom-transport-task-item-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-transport-task-item-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-task-item-read"
          }
        }
      },
      "ShipFrom-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-transport-unassigned-item-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-unassigned-item-read"
          }
        }
      },
      "ShipTo": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "country": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ShipTo-ScanInbound.Read": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address-ScanInbound.Read"
          }
        }
      },
      "ShipTo-shipment-collection-read": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address-shipment-collection-read"
          }
        }
      },
      "ShipTo-shipment-item-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-shipment-item-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-shipment-item-read"
          }
        }
      },
      "ShipTo-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-shipment-quotation-item-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-shipment-quotation-item-read"
          }
        }
      },
      "ShipTo-shipment-write": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-shipment-write"
          },
          "address": {
            "$ref": "#/components/schemas/Address-shipment-write"
          }
        }
      },
      "ShipTo-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object"
      },
      "ShipTo-transport-task-item-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-transport-task-item-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-task-item-read"
          }
        }
      },
      "ShipTo-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-transport-unassigned-item-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-unassigned-item-read"
          }
        }
      },
      "ShipTo-transport-warehouse_waybill_info-read": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact-transport-warehouse_waybill_info-read"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-warehouse_waybill_info-read"
          }
        }
      },
      "Shipment": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "purchaseInvoiceMatchingStatus": {
            "type": "string",
            "readOnly": true
          },
          "purchaseInvoiceMatchingReference": {
            "type": "string",
            "readOnly": true
          },
          "shipmentQuotation": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "manifest": {
            "$ref": "#/components/schemas/ShipmentManifest"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "metadata": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "pickupPoint": {
            "$ref": "#/components/schemas/PickupPoint"
          },
          "description": {
            "type": "string",
            "readOnly": true
          },
          "invoiceReference": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "commercialInvoice": {
            "$ref": "#/components/schemas/CommercialInvoice"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentSurchargeSet"
            }
          },
          "rates": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ShipmentRate"
            }
          },
          "purchaseRate": {
            "$ref": "#/components/schemas/RateInterface"
          },
          "salesRate": {
            "$ref": "#/components/schemas/ShipmentRate"
          },
          "confirmationSentAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deliveryConfirmationSentAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deliveredAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "dispute": {
            "type": "boolean",
            "readOnly": true
          },
          "nextTrackingUpdate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "paymentMethod": {
            "type": "string",
            "readOnly": true
          },
          "tasks": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ShipmentTask"
            }
          },
          "distributorReference": {
            "type": "string",
            "readOnly": true
          },
          "invoicable": {
            "type": "boolean",
            "readOnly": true
          },
          "bulk": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "externalOrder": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "conversations": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "integration": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "related": {
            "type": "string",
            "format": "iri-reference"
          },
          "relatedShipments": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "invoices": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          },
          "vehicle": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "transportSteps": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "fulfilment": {
            "$ref": "#/components/schemas/Fulfilment"
          },
          "archivedLabel": {
            "type": "boolean",
            "readOnly": true
          },
          "pickupRequest": {
            "type": "string",
            "description": "Pickup request to be able to delete pickup request if shipment gets canceled.",
            "format": "iri-reference",
            "readOnly": true
          },
          "brand": {
            "$ref": "#/components/schemas/Brand"
          },
          "shipmentEmails": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ShipmentEmail"
            }
          },
          "customsInformationContents": {
            "$ref": "#/components/schemas/CustomsInformationContents"
          },
          "customsInvoiceNumber": {
            "type": "string",
            "description": "Field represents invoiceNumber for customs (outside eu shipments).",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "example": "new",
            "default": "new"
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          },
          "relation": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "user": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "adminUser": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "transportType": {
            "$ref": "#/components/schemas/TransportType"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "service": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipFrom": {
            "$ref": "#/components/schemas/ShipFrom"
          },
          "shipFromAddressBookItem": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "shipToAddressBookItem": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "shipTo": {
            "$ref": "#/components/schemas/ShipTo"
          },
          "dispatch": {
            "$ref": "#/components/schemas/Dispatch"
          },
          "delivery": {
            "$ref": "#/components/schemas/Delivery"
          },
          "incoTerms": {
            "type": "string"
          },
          "insurance": {
            "$ref": "#/components/schemas/Insurance"
          },
          "flagged": {
            "type": "boolean",
            "readOnly": true
          },
          "flaggedManual": {
            "type": "boolean",
            "readOnly": true
          },
          "snoozeUntil": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "draft": {
            "type": "boolean"
          },
          "internalRemark": {
            "type": "string",
            "readOnly": true
          },
          "flow": {
            "type": "string",
            "readOnly": true
          },
          "dpdCustomerNumber": {
            "type": "string"
          },
          "dpdDepotCode": {
            "maxLength": 4,
            "minLength": 4,
            "type": "string"
          },
          "dpdPickupBy": {
            "type": "string",
            "readOnly": true
          },
          "dpdPickupType": {
            "type": "string",
            "readOnly": true
          },
          "duplicated": {
            "type": "boolean",
            "readOnly": true
          },
          "referral": {
            "$ref": "#/components/schemas/Referral"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "archived": {
            "type": "boolean",
            "readOnly": true
          },
          "relationPaths": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "confirmationSent": {
            "type": "boolean",
            "readOnly": true
          },
          "deliveryConfirmationSent": {
            "type": "boolean",
            "readOnly": true
          },
          "trackings": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "surchargeSets": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ShipmentSurchargeSet"
            }
          },
          "labelAvailable": {
            "type": "boolean",
            "readOnly": true
          },
          "payableAmount": {
            "type": "number",
            "readOnly": true
          },
          "payableDescription": {
            "type": "string",
            "readOnly": true
          },
          "editable": {
            "type": "boolean",
            "readOnly": true
          },
          "conversation": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "eoriNumber": {
            "type": "object",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          },
          "flattenShipmentItems": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "totalWeight": {
            "type": "number",
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "readOnly": true
          },
          "totalVolume": {
            "type": "number",
            "readOnly": true
          },
          "totalLoadingMeters": {
            "type": "number",
            "readOnly": true
          },
          "totalValue": {
            "type": "number",
            "readOnly": true
          },
          "export": {
            "type": "boolean",
            "readOnly": true
          },
          "import": {
            "type": "boolean",
            "readOnly": true
          },
          "domestic": {
            "type": "boolean",
            "readOnly": true
          },
          "exportToOutsideOfEU": {
            "type": "boolean",
            "readOnly": true
          },
          "importFromOutsideOfEU": {
            "type": "boolean",
            "readOnly": true
          },
          "purchaseRates": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/RateInterface"
            }
          },
          "salesRates": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/RateInterface"
            }
          },
          "genericFlow": {
            "type": "boolean",
            "readOnly": true
          },
          "dPDFlow": {
            "type": "boolean",
            "readOnly": true
          },
          "b2CFlow": {
            "type": "boolean",
            "readOnly": true
          },
          "versionV2": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Shipment-ScanInbound.Read": {
        "type": "object",
        "properties": {
          "salesRate": {
            "$ref": "#/components/schemas/ShipmentRate-ScanInbound.Read"
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          },
          "shipTo": {
            "$ref": "#/components/schemas/ShipTo-ScanInbound.Read"
          }
        },
        "description": ""
      },
      "Shipment-conversation-read": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Shipment-shipment-collection-read": {
        "type": "object",
        "properties": {
          "bulk": {
            "$ref": "#/components/schemas/BulkShipment-shipment-collection-read"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle-shipment-collection-read"
          },
          "transportSteps": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Step-shipment-collection-read"
            }
          },
          "status": {
            "type": "string",
            "example": "new",
            "default": "new"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-shipment-collection-read"
          },
          "shipFrom": {
            "$ref": "#/components/schemas/ShipFrom-shipment-collection-read"
          },
          "shipTo": {
            "$ref": "#/components/schemas/ShipTo-shipment-collection-read"
          },
          "dispatch": {
            "$ref": "#/components/schemas/Dispatch-shipment-collection-read"
          },
          "delivery": {
            "$ref": "#/components/schemas/Delivery-shipment-collection-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Shipment-shipment-item-read": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item-shipment-item-read"
            }
          },
          "pickupPoint": {
            "$ref": "#/components/schemas/PickupPoint-shipment-item-read"
          },
          "invoiceReference": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Label-shipment-item-read"
            }
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentSurchargeSet-shipment-item-read"
            }
          },
          "fulfilment": {
            "$ref": "#/components/schemas/Fulfilment-shipment-item-read"
          },
          "status": {
            "type": "string",
            "example": "new",
            "default": "new"
          },
          "transportType": {
            "$ref": "#/components/schemas/TransportType-shipment-item-read"
          },
          "service": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipFrom": {
            "$ref": "#/components/schemas/ShipFrom-shipment-item-read"
          },
          "shipTo": {
            "$ref": "#/components/schemas/ShipTo-shipment-item-read"
          },
          "dispatch": {
            "$ref": "#/components/schemas/Dispatch-shipment-item-read"
          },
          "delivery": {
            "$ref": "#/components/schemas/Delivery-shipment-item-read"
          },
          "incoTerms": {
            "type": "string"
          },
          "insurance": {
            "$ref": "#/components/schemas/Insurance-shipment-item-read"
          },
          "draft": {
            "type": "boolean"
          },
          "dpdCustomerNumber": {
            "type": "string"
          },
          "dpdDepotCode": {
            "maxLength": 4,
            "minLength": 4,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "conversation": {
            "$ref": "#/components/schemas/Conversation-shipment-item-read"
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Shipment-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "new",
            "default": "new"
          },
          "transportType": {
            "$ref": "#/components/schemas/TransportType-shipment-quotation-item-read"
          },
          "service": {
            "$ref": "#/components/schemas/Service-shipment-quotation-item-read"
          },
          "shipFrom": {
            "$ref": "#/components/schemas/ShipFrom-shipment-quotation-item-read"
          },
          "shipTo": {
            "$ref": "#/components/schemas/ShipTo-shipment-quotation-item-read"
          },
          "dispatch": {
            "$ref": "#/components/schemas/Dispatch-shipment-quotation-item-read"
          },
          "delivery": {
            "$ref": "#/components/schemas/Delivery-shipment-quotation-item-read"
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Shipment-shipment-write": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item-shipment-write"
            }
          },
          "pickupPoint": {
            "$ref": "#/components/schemas/PickupPoint-shipment-write"
          },
          "invoiceReference": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentSurchargeSet-shipment-write"
            }
          },
          "related": {
            "$ref": "#/components/schemas/Shipment-shipment-write"
          },
          "fulfilment": {
            "$ref": "#/components/schemas/Fulfilment-shipment-write"
          },
          "transportType": {
            "$ref": "#/components/schemas/TransportType-shipment-write"
          },
          "service": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipFrom": {
            "$ref": "#/components/schemas/ShipFrom-shipment-write"
          },
          "shipTo": {
            "$ref": "#/components/schemas/ShipTo-shipment-write"
          },
          "dispatch": {
            "$ref": "#/components/schemas/Dispatch-shipment-write"
          },
          "delivery": {
            "$ref": "#/components/schemas/Delivery-shipment-write"
          },
          "incoTerms": {
            "type": "string"
          },
          "insurance": {
            "$ref": "#/components/schemas/Insurance-shipment-write"
          },
          "draft": {
            "type": "boolean"
          },
          "dpdCustomerNumber": {
            "type": "string"
          },
          "dpdDepotCode": {
            "maxLength": 4,
            "minLength": 4,
            "type": "string"
          }
        },
        "description": ""
      },
      "Shipment-transport-route-item-read": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "new",
            "default": "new"
          }
        },
        "description": ""
      },
      "Shipment-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "string",
            "format": "iri-reference"
          },
          "status": {
            "type": "string",
            "example": "new",
            "default": "new"
          },
          "shipTo": {
            "$ref": "#/components/schemas/ShipTo-transport-task-collection-read_transport-task_label-collection-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Shipment-transport-task-item-read": {
        "type": "object",
        "properties": {
          "shipFrom": {
            "$ref": "#/components/schemas/ShipFrom-transport-task-item-read"
          },
          "shipTo": {
            "$ref": "#/components/schemas/ShipTo-transport-task-item-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Shipment-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "bulk": {
            "$ref": "#/components/schemas/BulkShipment-transport-unassigned-item-read"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle-transport-unassigned-item-read"
          },
          "shipFrom": {
            "$ref": "#/components/schemas/ShipFrom-transport-unassigned-item-read"
          },
          "shipTo": {
            "$ref": "#/components/schemas/ShipTo-transport-unassigned-item-read"
          },
          "dispatch": {
            "$ref": "#/components/schemas/Dispatch-transport-unassigned-item-read"
          },
          "delivery": {
            "$ref": "#/components/schemas/Delivery-transport-unassigned-item-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": ""
      },
      "Shipment-transport-warehouse_waybill_info-read": {
        "type": "object",
        "properties": {
          "fulfilment": {
            "$ref": "#/components/schemas/Fulfilment-transport-warehouse_waybill_info-read"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-warehouse_waybill_info-read"
          },
          "shipTo": {
            "$ref": "#/components/schemas/ShipTo-transport-warehouse_waybill_info-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": ""
      },
      "ShipmentEmail": {
        "type": "object",
        "properties": {
          "shipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "type": {
            "$ref": "#/components/schemas/ShipmentEmailType"
          },
          "sendAt": {
            "type": "string",
            "format": "date-time"
          },
          "sendBy": {
            "type": "string"
          },
          "sendTo": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ShipmentEmailType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "readOnly": true
          },
          "trackingEmailClass": {
            "type": "string",
            "readOnly": true
          },
          "trackingEmailTemplate": {
            "type": "string",
            "readOnly": true
          },
          "displayValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ShipmentInterface": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "object",
            "readOnly": true
          },
          "updatedAt": {
            "type": "object",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentItemInterface"
            }
          },
          "relation": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "surchargeSets": {
            "$ref": "#/components/schemas/Collection"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "sequence": {
            "$ref": "#/components/schemas/ShipmentSequence"
          },
          "sequenceNumber": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "type": "string"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "service": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipFrom": {
            "$ref": "#/components/schemas/ShipFrom"
          },
          "shipFromAddressBookItem": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipToAddressBookItem": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipTo": {
            "$ref": "#/components/schemas/ShipTo"
          },
          "dispatch": {
            "$ref": "#/components/schemas/Dispatch"
          },
          "delivery": {
            "$ref": "#/components/schemas/Delivery"
          },
          "totalWeight": {
            "type": "number",
            "readOnly": true
          },
          "totalItems": {
            "type": "integer",
            "readOnly": true
          },
          "totalVolume": {
            "type": "number",
            "readOnly": true
          },
          "totalLoadingMeters": {
            "type": "number",
            "readOnly": true
          },
          "totalValue": {
            "type": "number",
            "readOnly": true
          },
          "export": {
            "type": "boolean",
            "readOnly": true
          },
          "import": {
            "type": "boolean",
            "readOnly": true
          },
          "domestic": {
            "type": "boolean",
            "readOnly": true
          },
          "exportToOutsideOfEU": {
            "type": "boolean",
            "readOnly": true
          },
          "importFromOutsideOfEU": {
            "type": "boolean",
            "readOnly": true
          },
          "incoTerms": {
            "type": "string"
          },
          "purchaseRate": {
            "$ref": "#/components/schemas/RateInterface"
          },
          "purchaseRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateInterface"
            }
          },
          "salesRate": {
            "$ref": "#/components/schemas/RateInterface"
          },
          "salesRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateInterface"
            }
          },
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "insurance": {
            "$ref": "#/components/schemas/Insurance"
          },
          "adminUser": {
            "type": "string",
            "format": "iri-reference"
          },
          "flagged": {
            "type": "boolean"
          },
          "flaggedManual": {
            "type": "boolean"
          },
          "internalRemark": {
            "type": "string"
          },
          "draft": {
            "type": "boolean"
          },
          "dpdDepotCode": {
            "type": "string"
          },
          "versionV2": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "ShipmentItemInterface": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "format": "iri-reference"
          },
          "typeGroup": {
            "$ref": "#/components/schemas/Group"
          },
          "stackable": {
            "type": "boolean"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "dimensionSorted": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "number"
            }
          },
          "volume": {
            "type": "number",
            "readOnly": true
          },
          "weight": {
            "type": "number"
          },
          "unCode": {
            "$ref": "#/components/schemas/UNCode"
          },
          "value": {
            "type": "number"
          },
          "amount": {
            "type": "number",
            "readOnly": true
          },
          "customerReference1": {
            "type": "string"
          },
          "customerReference2": {
            "type": "string"
          },
          "subject": {
            "$ref": "#/components/schemas/ShipmentInterface"
          },
          "contents": {
            "$ref": "#/components/schemas/Collection"
          }
        }
      },
      "ShipmentManifest": {
        "type": "object",
        "properties": {
          "sequence": {
            "$ref": "#/components/schemas/ShipmentManifestSequence"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "packageCount": {
            "type": "integer",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ShipmentManifestSequence": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "ShipmentQuotation-conversation-read": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ShipmentQuotation-shipment-quotation-collection-read": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ShipmentQuotation-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "rejectionRemark": {
            "type": "string"
          },
          "shipment": {
            "$ref": "#/components/schemas/Shipment-shipment-quotation-item-read"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item-shipment-quotation-item-read"
            }
          },
          "reference": {
            "type": "string"
          },
          "salesRate": {
            "$ref": "#/components/schemas/ShipmentQuotationRate-shipment-quotation-item-read"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "example": "new",
            "default": "new"
          },
          "transportType": {
            "$ref": "#/components/schemas/TransportType-shipment-quotation-item-read"
          },
          "service": {
            "$ref": "#/components/schemas/Service-shipment-quotation-item-read"
          },
          "shipFrom": {
            "$ref": "#/components/schemas/ShipFrom-shipment-quotation-item-read"
          },
          "shipTo": {
            "$ref": "#/components/schemas/ShipTo-shipment-quotation-item-read"
          },
          "dispatch": {
            "$ref": "#/components/schemas/Dispatch-shipment-quotation-item-read"
          },
          "delivery": {
            "$ref": "#/components/schemas/Delivery-shipment-quotation-item-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "conversation": {
            "$ref": "#/components/schemas/Conversation-shipment-quotation-item-read"
          },
          "sequence": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ShipmentQuotationRate-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "distributor": {
            "$ref": "#/components/schemas/Distributor-shipment-quotation-item-read"
          },
          "service": {
            "$ref": "#/components/schemas/Service-shipment-quotation-item-read"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "ShipmentRate": {
        "required": ["vat"],
        "type": "object",
        "properties": {
          "shipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "surcharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentRateSurcharge"
            }
          },
          "exactSalesInvoiceId": {
            "type": "string"
          },
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "type": {
            "type": "string"
          },
          "pricelistId": {
            "type": "string",
            "format": "uuid"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "service": {
            "type": "string",
            "format": "iri-reference"
          },
          "price": {
            "type": "number"
          },
          "totalPrice": {
            "type": "number"
          },
          "vat": {
            "$ref": "#/components/schemas/Vat"
          },
          "remark": {
            "type": "string"
          },
          "processingDays": {
            "type": "string"
          },
          "departures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expectedDelivery": {
            "type": "string",
            "format": "date-time"
          },
          "priceRule": {
            "$ref": "#/components/schemas/PriceRules"
          },
          "onRequest": {
            "type": "boolean"
          },
          "manual": {
            "type": "boolean"
          },
          "user": {
            "type": "string",
            "format": "iri-reference"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "invoiced": {
            "type": "boolean",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          },
          "priceIncl": {
            "type": "number",
            "readOnly": true
          },
          "tax": {
            "type": "number",
            "readOnly": true
          },
          "basePrice": {
            "type": "number",
            "readOnly": true
          },
          "basePriceIncl": {
            "type": "number",
            "readOnly": true
          },
          "baseTaxPrice": {
            "type": "number",
            "readOnly": true
          },
          "totalTax": {
            "type": "number",
            "readOnly": true
          },
          "totalPriceIncl": {
            "type": "number",
            "readOnly": true
          },
          "nonManualSurcharges": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/RateSurchargeInterface"
            }
          },
          "manualSurcharges": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/RateSurchargeInterface"
            }
          },
          "energySurcharge": {
            "$ref": "#/components/schemas/RateSurchargeInterface"
          },
          "description": {
            "type": "string",
            "readOnly": true
          },
          "departuresAsString": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ShipmentRate-ScanInbound.Read": {
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/Service-ScanInbound.Read"
          }
        }
      },
      "ShipmentRateSurcharge": {
        "required": ["vat"],
        "type": "object",
        "properties": {
          "rate": {
            "$ref": "#/components/schemas/ShipmentRate"
          },
          "exactSalesInvoiceId": {
            "type": "string"
          },
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "surchargeSet": {
            "type": "string",
            "format": "iri-reference"
          },
          "surcharge": {
            "$ref": "#/components/schemas/Surcharge"
          },
          "price": {
            "type": "number"
          },
          "vat": {
            "$ref": "#/components/schemas/Vat"
          },
          "description": {
            "type": "string"
          },
          "priceRule": {
            "$ref": "#/components/schemas/PriceRules"
          },
          "onRequest": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "invoiced": {
            "type": "boolean",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          },
          "priceIncl": {
            "type": "number",
            "readOnly": true
          },
          "tax": {
            "type": "number",
            "readOnly": true
          },
          "insurance": {
            "type": "boolean",
            "readOnly": true
          },
          "energy": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "ShipmentSequence": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "ShipmentSurchargeSet": {
        "type": "object",
        "properties": {
          "shipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "surchargeSet": {
            "type": "string",
            "format": "iri-reference"
          },
          "manual": {
            "type": "boolean"
          }
        }
      },
      "ShipmentSurchargeSet-shipment-item-read": {
        "type": "object",
        "properties": {
          "surchargeSet": {
            "type": "string",
            "format": "iri-reference"
          },
          "manual": {
            "type": "boolean"
          }
        }
      },
      "ShipmentSurchargeSet-shipment-write": {
        "type": "object",
        "properties": {
          "surchargeSet": {
            "type": "string",
            "format": "iri-reference"
          },
          "manual": {
            "type": "boolean"
          }
        }
      },
      "ShipmentTask": {
        "required": [
          "assignee",
          "body",
          "category",
          "createdBy",
          "shipment",
          "title"
        ],
        "type": "object",
        "properties": {
          "shipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "template": {
            "$ref": "#/components/schemas/Template"
          },
          "title": {
            "maxLength": 100,
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "createdBy": {
            "type": "string",
            "format": "iri-reference"
          },
          "assignee": {
            "type": "string",
            "format": "iri-reference"
          },
          "due": {
            "type": "string",
            "format": "date-time"
          },
          "overDue": {
            "type": "boolean",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ShopifyServiceIntegration-integration-item-post-read": {
        "type": "object",
        "properties": {
          "client": {
            "$ref": "#/components/schemas/Client-integration-item-post-read"
          },
          "shopUrl": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "externalAccountId": {
            "type": "string"
          }
        },
        "description": "This is a Platform integration as well as an ApiClient integration. The Shopify microservice posts to us, the Platform, using API credentials."
      },
      "ShopifyServiceIntegration-integration-item-read": {
        "type": "object",
        "properties": {
          "shopUrl": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "readOnly": true
          },
          "externalAccountId": {
            "type": "string"
          }
        },
        "description": "This is a Platform integration as well as an ApiClient integration. The Shopify microservice posts to us, the Platform, using API credentials."
      },
      "ShopifyServiceIntegration-integration-item-write": {
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "shopUrl": {
            "type": "string"
          },
          "externalAccountId": {
            "type": "string"
          }
        },
        "description": "This is a Platform integration as well as an ApiClient integration. The Shopify microservice posts to us, the Platform, using API credentials."
      },
      "Status-transport-status-read": {
        "type": "object",
        "properties": {
          "step": {
            "type": "string",
            "format": "iri-reference"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Status-transport-status-write": {
        "type": "object",
        "properties": {
          "step": {
            "type": "string",
            "format": "iri-reference"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Step": {
        "required": ["type"],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer"
          },
          "route": {
            "type": "string",
            "format": "iri-reference"
          },
          "type": {
            "type": "string"
          },
          "estimatedArrival": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "times": {
            "$ref": "#/components/schemas/Times"
          },
          "distance": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "instructions": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber"
          },
          "shipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "depot": {
            "type": "string",
            "format": "iri-reference"
          },
          "pickup": {
            "type": "string",
            "format": "iri-reference"
          },
          "load": {
            "$ref": "#/components/schemas/Load"
          },
          "loadPercentage": {
            "type": "number"
          },
          "done": {
            "type": "boolean"
          },
          "position": {
            "type": "integer"
          },
          "activities": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Step-shipment-collection-read": {
        "type": "object",
        "properties": {
          "route": {
            "$ref": "#/components/schemas/Route-shipment-collection-read"
          }
        }
      },
      "Step-transport-route-item-read": {
        "required": ["type"],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "estimatedArrival": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-route-item-read"
          },
          "distance": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-route-item-read"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-route-item-read"
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shipment-transport-route-item-read"
            }
          },
          "depot": {
            "type": "string",
            "format": "iri-reference"
          },
          "load": {
            "$ref": "#/components/schemas/Load-transport-route-item-read"
          },
          "loadPercentage": {
            "type": "number"
          },
          "done": {
            "type": "boolean"
          },
          "position": {
            "type": "integer"
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskActivity-transport-route-item-read"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Step-transport-route-item-write": {
        "required": ["type"],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "position": {
            "type": "integer"
          },
          "activities": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      },
      "Step-transport-step-collection-read": {
        "required": ["type"],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer"
          },
          "route": {
            "type": "string",
            "format": "iri-reference"
          },
          "type": {
            "type": "string"
          },
          "estimatedArrival": {
            "type": "string",
            "format": "date-time"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-step-collection-read"
          },
          "distance": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-step-collection-read"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-step-collection-read"
          },
          "depot": {
            "$ref": "#/components/schemas/Depot-transport-step-collection-read"
          },
          "load": {
            "$ref": "#/components/schemas/Load-transport-step-collection-read"
          },
          "loadPercentage": {
            "type": "number"
          },
          "done": {
            "type": "boolean"
          },
          "position": {
            "type": "integer"
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskActivity-transport-step-collection-read"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Step-transport-task-collection-read": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer"
          },
          "route": {
            "$ref": "#/components/schemas/Route-transport-task-collection-read"
          }
        }
      },
      "Step-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer"
          },
          "route": {
            "$ref": "#/components/schemas/Route-transport-task-collection-read_transport-task_label-collection-read"
          }
        }
      },
      "Step-transport-task-item-read": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer"
          },
          "route": {
            "$ref": "#/components/schemas/Route-transport-task-item-read"
          }
        }
      },
      "Summary": {
        "type": "object",
        "properties": {
          "cost": {
            "type": "integer"
          },
          "pickup": {
            "$ref": "#/components/schemas/Load"
          },
          "delivery": {
            "$ref": "#/components/schemas/Load"
          },
          "loadPercentage": {
            "type": "number"
          },
          "times": {
            "$ref": "#/components/schemas/Times"
          },
          "distance": {
            "type": "integer"
          }
        }
      },
      "Summary-transport-route-item-read": {
        "type": "object",
        "properties": {
          "cost": {
            "type": "integer"
          },
          "pickup": {
            "$ref": "#/components/schemas/Load-transport-route-item-read"
          },
          "delivery": {
            "$ref": "#/components/schemas/Load-transport-route-item-read"
          },
          "loadPercentage": {
            "type": "number"
          },
          "times": {
            "$ref": "#/components/schemas/Times-transport-route-item-read"
          },
          "distance": {
            "type": "integer"
          }
        }
      },
      "Summary-transport-route_collection-item-read": {
        "type": "object",
        "properties": {
          "cost": {
            "type": "integer"
          },
          "pickup": {
            "$ref": "#/components/schemas/Load-transport-route_collection-item-read"
          },
          "delivery": {
            "$ref": "#/components/schemas/Load-transport-route_collection-item-read"
          },
          "loadPercentage": {
            "type": "number"
          },
          "times": {
            "$ref": "#/components/schemas/Times-transport-route_collection-item-read"
          },
          "distance": {
            "type": "integer"
          }
        }
      },
      "Summary-transport-route_collection-item-write": {
        "type": "object"
      },
      "Surcharge": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string",
            "format": "iri-reference"
          },
          "type": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "distributor": {
            "type": "string",
            "format": "iri-reference"
          },
          "distributorCode": {
            "type": "string"
          },
          "includeEnergySurchargeInBase": {
            "type": "boolean",
            "description": "Property to determine if surcharge price should be added to base price before calculating energy surcharge."
          },
          "price": {
            "type": "number"
          },
          "percentage": {
            "type": "number"
          },
          "minPrice": {
            "type": "number"
          },
          "maxPrice": {
            "type": "number"
          },
          "internalRemark": {
            "maxLength": 100,
            "type": "string"
          },
          "conditions": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "SurchargeSet-surcharge-set-item-read": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Task": {
        "required": ["assignee", "body", "category", "createdBy", "title"],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "open",
            "default": "open"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "template": {
            "$ref": "#/components/schemas/Template"
          },
          "title": {
            "maxLength": 100,
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "createdBy": {
            "type": "string",
            "format": "iri-reference"
          },
          "assignee": {
            "type": "string",
            "format": "iri-reference"
          },
          "due": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "readOnly": true
          },
          "overDue": {
            "type": "boolean",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Task-transport-task-collection-read": {
        "type": "object",
        "properties": {
          "followUpTask": {
            "$ref": "#/components/schemas/Task-transport-task-collection-read"
          },
          "dateRange": {
            "$ref": "#/components/schemas/DateRange-transport-task-collection-read"
          },
          "pickupActivity": {
            "$ref": "#/components/schemas/TaskActivity-transport-task-collection-read"
          },
          "deliveryActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskActivity-transport-task-collection-read"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-task-collection-read"
          }
        }
      },
      "Task-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object",
        "properties": {
          "recomputeType": {
            "$ref": "#/components/schemas/RecomputeType-transport-task-collection-read_transport-task_label-collection-read"
          },
          "recomputedBy": {
            "$ref": "#/components/schemas/AdminUser-transport-task-collection-read_transport-task_label-collection-read"
          },
          "recomputedAt": {
            "type": "string",
            "format": "date-time"
          },
          "followUpTask": {
            "$ref": "#/components/schemas/Task-transport-task-collection-read_transport-task_label-collection-read"
          },
          "dateRange": {
            "$ref": "#/components/schemas/DateRange-transport-task-collection-read_transport-task_label-collection-read"
          },
          "pickupActivity": {
            "$ref": "#/components/schemas/TaskActivity-transport-task-collection-read_transport-task_label-collection-read"
          },
          "deliveryActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskActivity-transport-task-collection-read_transport-task_label-collection-read"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-task-collection-read_transport-task_label-collection-read"
          }
        }
      },
      "Task-transport-task-item-read": {
        "type": "object",
        "properties": {
          "followUpTask": {
            "$ref": "#/components/schemas/Task-transport-task-item-read"
          },
          "dateRange": {
            "$ref": "#/components/schemas/DateRange-transport-task-item-read"
          },
          "pickupActivity": {
            "$ref": "#/components/schemas/TaskActivity-transport-task-item-read"
          },
          "deliveryActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskActivity-transport-task-item-read"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-task-item-read"
          }
        }
      },
      "Task-transport-task-item-write": {
        "type": "object",
        "properties": {
          "dateRange": {
            "$ref": "#/components/schemas/DateRange-transport-task-item-write"
          }
        }
      },
      "Task-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TaskActivity-transport-route-item-read": {
        "required": ["action", "task"],
        "type": "object",
        "properties": {
          "task": {
            "type": "string",
            "format": "iri-reference"
          },
          "description": {
            "maxLength": 100,
            "type": "string"
          },
          "depot": {
            "type": "string",
            "format": "iri-reference"
          },
          "action": {
            "maxLength": 20,
            "type": "string"
          },
          "reference": {
            "maxLength": 100,
            "type": "string"
          },
          "instructions": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-route-item-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-route-item-read"
          }
        }
      },
      "TaskActivity-transport-step-collection-read": {
        "required": ["task"],
        "type": "object",
        "properties": {
          "task": {
            "type": "string",
            "format": "iri-reference"
          },
          "description": {
            "maxLength": 100,
            "type": "string"
          },
          "reference": {
            "maxLength": 100,
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-step-collection-read"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-step-collection-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-step-collection-read"
          }
        }
      },
      "TaskActivity-transport-task-activity-collection-read": {
        "type": "object"
      },
      "TaskActivity-transport-task-activity-item-read": {
        "type": "object"
      },
      "TaskActivity-transport-task-collection-read": {
        "required": ["action"],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 100,
            "type": "string"
          },
          "depot": {
            "type": "string",
            "format": "iri-reference"
          },
          "action": {
            "maxLength": 20,
            "type": "string"
          },
          "reference": {
            "maxLength": 100,
            "type": "string"
          },
          "instructions": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-task-collection-read"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-task-collection-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-task-collection-read"
          },
          "step": {
            "$ref": "#/components/schemas/Step-transport-task-collection-read"
          }
        }
      },
      "TaskActivity-transport-task-collection-read_transport-task_label-collection-read": {
        "required": ["action"],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 100,
            "type": "string"
          },
          "depot": {
            "type": "string",
            "format": "iri-reference"
          },
          "action": {
            "maxLength": 20,
            "type": "string"
          },
          "reference": {
            "maxLength": 100,
            "type": "string"
          },
          "instructions": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-task-collection-read_transport-task_label-collection-read"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-task-collection-read_transport-task_label-collection-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-task-collection-read_transport-task_label-collection-read"
          },
          "step": {
            "$ref": "#/components/schemas/Step-transport-task-collection-read_transport-task_label-collection-read"
          }
        }
      },
      "TaskActivity-transport-task-item-read": {
        "required": ["action"],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 100,
            "type": "string"
          },
          "depot": {
            "type": "string",
            "format": "iri-reference"
          },
          "action": {
            "maxLength": 20,
            "type": "string"
          },
          "reference": {
            "maxLength": 100,
            "type": "string"
          },
          "instructions": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address-transport-task-item-read"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-task-item-read"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow-transport-task-item-read"
          },
          "step": {
            "$ref": "#/components/schemas/Step-transport-task-item-read"
          }
        }
      },
      "TaskLabel-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/Label-transport-task-collection-read_transport-task_label-collection-read"
          },
          "inbound": {
            "type": "boolean"
          },
          "recomputeType": {
            "$ref": "#/components/schemas/RecomputeType-transport-task-collection-read_transport-task_label-collection-read"
          },
          "recomputedBy": {
            "$ref": "#/components/schemas/AdminUser-transport-task-collection-read_transport-task_label-collection-read"
          },
          "recomputedAt": {
            "type": "string",
            "format": "date-time"
          },
          "followUpTask": {
            "$ref": "#/components/schemas/Task-transport-task-collection-read_transport-task_label-collection-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "shipment": {
            "$ref": "#/components/schemas/Shipment-transport-task-collection-read_transport-task_label-collection-read"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-task-collection-read_transport-task_label-collection-read"
          },
          "dateRange": {
            "$ref": "#/components/schemas/DateRange-transport-task-collection-read_transport-task_label-collection-read"
          },
          "pickupActivity": {
            "$ref": "#/components/schemas/TaskActivity-transport-task-collection-read_transport-task_label-collection-read"
          },
          "deliveryActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskActivity-transport-task-collection-read_transport-task_label-collection-read"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TaskLabel-transport-task-item-read": {
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/Label-transport-task-item-read"
          },
          "inbound": {
            "type": "boolean"
          },
          "followUpTask": {
            "$ref": "#/components/schemas/Task-transport-task-item-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "shipment": {
            "$ref": "#/components/schemas/Shipment-transport-task-item-read"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-task-item-read"
          },
          "dateRange": {
            "$ref": "#/components/schemas/DateRange-transport-task-item-read"
          },
          "pickupActivity": {
            "$ref": "#/components/schemas/TaskActivity-transport-task-item-read"
          },
          "deliveryActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskActivity-transport-task-item-read"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TaskLabel-transport-task-item-write": {
        "type": "object",
        "properties": {
          "dateRange": {
            "$ref": "#/components/schemas/DateRange-transport-task-item-write"
          }
        }
      },
      "TaskPickup-transport-task-collection-read": {
        "type": "object",
        "properties": {
          "pickup": {
            "type": "string",
            "format": "iri-reference"
          },
          "followUpTask": {
            "$ref": "#/components/schemas/Task-transport-task-collection-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-task-collection-read"
          },
          "dateRange": {
            "$ref": "#/components/schemas/DateRange-transport-task-collection-read"
          },
          "pickupActivity": {
            "$ref": "#/components/schemas/TaskActivity-transport-task-collection-read"
          },
          "deliveryActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskActivity-transport-task-collection-read"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TaskPickup-transport-task-item-read": {
        "type": "object",
        "properties": {
          "pickup": {
            "type": "string",
            "format": "iri-reference"
          },
          "followUpTask": {
            "$ref": "#/components/schemas/Task-transport-task-item-read"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-task-item-read"
          },
          "dateRange": {
            "$ref": "#/components/schemas/DateRange-transport-task-item-read"
          },
          "pickupActivity": {
            "$ref": "#/components/schemas/TaskActivity-transport-task-item-read"
          },
          "deliveryActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskActivity-transport-task-item-read"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TaskPickup-transport-task-item-write": {
        "type": "object",
        "properties": {
          "dateRange": {
            "$ref": "#/components/schemas/DateRange-transport-task-item-write"
          }
        }
      },
      "Template": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "TimeWindow": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-address_book-item-read": {
        "type": "object"
      },
      "TimeWindow-shipment-collection-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-shipment-item-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-shipment-quotation-item-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-shipment-write": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-depot-collection-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-depot-collection-write": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-depot-item-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-pickup-collection-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-pickup-item-read": {
        "type": "object"
      },
      "TimeWindow-transport-pickup_schedule-collection-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-pickup_schedule-collection-write": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-pickup_schedule-item-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-pickup_schedule-item-write": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-route-item-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-route_collection-collection-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-route_collection-collection-write": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-route_collection-item-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-route_collection-item-write": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-route_collection_vehicle-collection-read": {
        "type": "object"
      },
      "TimeWindow-transport-route_collection_vehicle-item-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-route_collection_vehicle-item-write": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-step-collection-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-task-collection-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-task-item-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TimeWindow-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Times": {
        "type": "object",
        "properties": {
          "setup": {
            "type": "integer"
          },
          "service": {
            "type": "integer"
          },
          "duration": {
            "type": "integer"
          },
          "waiting": {
            "type": "integer"
          },
          "total": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "Times-transport-route-item-read": {
        "type": "object",
        "properties": {
          "setup": {
            "type": "integer"
          },
          "service": {
            "type": "integer"
          },
          "duration": {
            "type": "integer"
          },
          "waiting": {
            "type": "integer"
          },
          "total": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "Times-transport-route_collection-item-read": {
        "type": "object",
        "properties": {
          "setup": {
            "type": "integer"
          },
          "service": {
            "type": "integer"
          },
          "duration": {
            "type": "integer"
          },
          "waiting": {
            "type": "integer"
          },
          "total": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "Tracking-tracking-read": {
        "type": "object",
        "properties": {
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingLine-tracking-read"
            }
          },
          "label": {
            "type": "string",
            "format": "iri-reference"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "TrackingEmail": {
        "type": "object",
        "properties": {
          "brand": {
            "$ref": "#/components/schemas/Brand"
          },
          "trackingEmailType": {
            "$ref": "#/components/schemas/TrackingEmailType"
          },
          "country": {
            "type": "string",
            "format": "iri-reference"
          },
          "active": {
            "type": "boolean"
          },
          "subject": {
            "type": "string"
          },
          "buttonText": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "emailRecipient": {
            "$ref": "#/components/schemas/BrandEmailRecipient"
          },
          "replyToEmailAddress": {
            "type": "string"
          },
          "bccEmailAddress": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "relationPaths": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "TrackingEmailType": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "key": {
            "$ref": "#/components/schemas/ShipmentEmailType"
          },
          "position": {
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          },
          "trackingEmailTypeVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingEmailTypeVariable"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "TrackingEmailTypeVariable": {
        "type": "object",
        "properties": {
          "trackingEmailTypeVariableGroup": {
            "$ref": "#/components/schemas/TrackingEmailTypeVariableGroup"
          },
          "trackingEmailTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingEmailType"
            }
          },
          "description": {
            "type": "string"
          },
          "propertyPath": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "TrackingEmailTypeVariableGroup": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Used to display in the variable options."
          },
          "name": {
            "type": "string",
            "description": "Used as prefix for variables to create unique names."
          },
          "trackingEmailTypeVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingEmailTypeVariable"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "TrackingLine-tracking-read": {
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "distributorDescription": {
            "type": "string"
          },
          "distributorLocation": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "Internal label workflow status."
          }
        }
      },
      "TrackingPage": {
        "type": "object",
        "properties": {
          "brand": {
            "$ref": "#/components/schemas/Brand"
          },
          "backgroundColor": {
            "type": "string",
            "example": "#f3f4f6",
            "default": "#f3f4f6"
          },
          "content": {
            "type": "string"
          },
          "useBrandHeader": {
            "type": "boolean"
          },
          "useBrandFooter": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "relationPaths": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "TransportPickupRequest": {
        "required": ["addressBookItem"],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "addressBookItem": {
            "type": "string",
            "format": "iri-reference"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "relation": {
            "type": "string",
            "format": "iri-reference"
          },
          "depots": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "transportTasks": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TransportPickupRequest-transport-pickup_request-collection-read": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TransportPickupRequest-transport-pickup_request-collection-write": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TransportPickupRequest-transport-pickup_request-item-read": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TransportPickupRequest-transport-pickup_request-item-write": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TransportType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "readOnly": true
          },
          "displayValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "TransportType-shipment-item-read": {
        "type": "object"
      },
      "TransportType-shipment-quotation-item-read": {
        "type": "object"
      },
      "TransportType-shipment-write": {
        "type": "object"
      },
      "Type-shipment-item-read": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Type-type": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "UNCode": {
        "required": ["number"],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer"
          },
          "descriptionNL": {
            "type": "string"
          },
          "descriptionEN": {
            "type": "string"
          },
          "descriptionDE": {
            "type": "string"
          },
          "descriptionFR": {
            "type": "string"
          },
          "packingGroup": {
            "type": "string"
          },
          "class": {
            "type": "string"
          },
          "tunnelRestrictionCode": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Unassigned": {
        "type": "object",
        "properties": {
          "routeCollection": {
            "type": "string",
            "format": "iri-reference"
          },
          "task": {
            "type": "string",
            "format": "iri-reference"
          },
          "reason": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Unassigned-transport-unassigned-collection-read": {
        "type": "object"
      },
      "Unassigned-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task-transport-unassigned-item-read"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "UnassignedLabel": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "routeCollection": {
            "type": "string",
            "format": "iri-reference"
          },
          "task": {
            "type": "string",
            "format": "iri-reference"
          },
          "reason": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "shipment": {
            "type": "string",
            "format": "iri-reference",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "UnassignedLabel-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/Label-transport-unassigned-item-read"
          },
          "task": {
            "$ref": "#/components/schemas/Task-transport-unassigned-item-read"
          },
          "reason": {
            "type": "string"
          },
          "shipment": {
            "$ref": "#/components/schemas/Shipment-transport-unassigned-item-read"
          }
        }
      },
      "UnassignedPickup": {
        "type": "object",
        "properties": {
          "pickup": {
            "type": "string",
            "format": "iri-reference"
          },
          "routeCollection": {
            "type": "string",
            "format": "iri-reference"
          },
          "task": {
            "type": "string",
            "format": "iri-reference"
          },
          "reason": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "UnassignedPickup-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "pickup": {
            "$ref": "#/components/schemas/Pickup-transport-unassigned-item-read"
          },
          "task": {
            "$ref": "#/components/schemas/Task-transport-unassigned-item-read"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "UnassignedShipment": {
        "type": "object",
        "properties": {
          "shipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "routeCollection": {
            "type": "string",
            "format": "iri-reference"
          },
          "task": {
            "type": "string",
            "format": "iri-reference"
          },
          "reason": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        },
        "description": ""
      },
      "UnassignedShipment-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task-transport-unassigned-item-read"
          },
          "reason": {
            "type": "string"
          }
        },
        "description": ""
      },
      "User-pickup_request-collection-read": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "User-user-collection-read": {
        "type": "object"
      },
      "User-user-collection-write": {
        "type": "object"
      },
      "User-user-item-read": {
        "type": "object",
        "properties": {
          "relation": {
            "$ref": "#/components/schemas/Relation-user-item-read"
          },
          "name": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Vat": {
        "required": ["code", "description"],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "description": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "percentage": {
            "type": "number"
          },
          "country": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/VatTransactionType"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "exactId": {
            "type": "string"
          },
          "idAsString": {
            "type": "string",
            "readOnly": true
          },
          "idAsBytes": {
            "type": "string",
            "readOnly": true
          },
          "idAsHex": {
            "type": "string",
            "readOnly": true
          },
          "idAsDatabaseValue": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "VatTransactionType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Vehicle-shipment-collection-read": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "Vehicle-transport-pickup_schedule-collection-read": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Vehicle-transport-route-collection-read": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Vehicle-transport-route-item-read": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Vehicle-transport-route_collection-item-read": {
        "type": "object",
        "properties": {
          "depot": {
            "$ref": "#/components/schemas/Depot-transport-route_collection-item-read"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "licensePlate": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-route_collection-item-read"
          },
          "capacity": {
            "$ref": "#/components/schemas/Load-transport-route_collection-item-read"
          },
          "color": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Vehicle-transport-task-collection-read": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Vehicle-transport-task-collection-read_transport-task_label-collection-read": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Vehicle-transport-task-item-read": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Vehicle-transport-unassigned-item-read": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Vehicle-transport-vehicle-collection-read": {
        "type": "object",
        "properties": {
          "depot": {
            "$ref": "#/components/schemas/Depot-transport-vehicle-collection-read"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "licensePlate": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-vehicle-collection-read"
          },
          "capacity": {
            "$ref": "#/components/schemas/Load-transport-vehicle-collection-read"
          },
          "color": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Vehicle-transport-vehicle-collection-write": {
        "type": "object",
        "properties": {
          "depot": {
            "type": "string",
            "format": "iri-reference"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "licensePlate": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-vehicle-collection-write"
          },
          "capacity": {
            "$ref": "#/components/schemas/Load-transport-vehicle-collection-write"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "Vehicle-transport-vehicle-item-read": {
        "type": "object",
        "properties": {
          "depot": {
            "$ref": "#/components/schemas/Depot-transport-vehicle-item-read"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "licensePlate": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-vehicle-item-read"
          },
          "capacity": {
            "$ref": "#/components/schemas/Load-transport-vehicle-item-read"
          },
          "color": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Vehicle-transport-vehicle-item-write": {
        "type": "object",
        "properties": {
          "depot": {
            "$ref": "#/components/schemas/Depot-transport-vehicle-item-write"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "licensePlate": {
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumber-transport-vehicle-item-write"
          },
          "capacity": {
            "$ref": "#/components/schemas/Load-transport-vehicle-item-write"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "WarehouseInformation": {
        "type": "object",
        "properties": {
          "waybill": {
            "type": "string"
          },
          "tasks": {
            "$ref": "#/components/schemas/Collection"
          },
          "label": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipment": {
            "type": "string",
            "format": "iri-reference"
          },
          "relation": {
            "type": "string",
            "description": "Temp work around due to not functional inclusion of subresources through json api spec in the current version.",
            "format": "iri-reference"
          }
        }
      },
      "WarehouseInformation-transport-warehouse_waybill_info-read": {
        "type": "object",
        "properties": {
          "waybill": {
            "type": "string"
          },
          "tasks": {
            "$ref": "#/components/schemas/Collection-transport-warehouse_waybill_info-read"
          },
          "label": {
            "type": "string",
            "format": "iri-reference"
          },
          "shipment": {
            "$ref": "#/components/schemas/Shipment-transport-warehouse_waybill_info-read"
          },
          "relation": {
            "$ref": "#/components/schemas/Relation-transport-warehouse_waybill_info-read"
          }
        }
      },
      "Webhook-webhook-collection-read": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "integration": {
            "type": "string",
            "format": "iri-reference"
          },
          "event": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Webhook-webhook-item-read": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "integration": {
            "type": "string",
            "format": "iri-reference"
          },
          "event": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Webhook-webhook-write": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "integration": {
            "type": "string",
            "format": "iri-reference"
          },
          "event": {
            "type": "string"
          }
        }
      },
      "Widget-widget-item-read": {
        "required": ["description", "height", "key", "name", "width"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "width": {
            "type": "integer",
            "example": 1
          },
          "height": {
            "type": "integer",
            "example": 4
          },
          "dataset": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "Widget-widget-read": {
        "required": ["description", "height", "key", "name", "width"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "width": {
            "type": "integer",
            "example": 1
          },
          "height": {
            "type": "integer",
            "example": 4
          },
          "dataset": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "description": "OAuth 2.0 application Grant",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.boekuwzending.com/token",
            "scopes": {}
          }
        }
      }
    }
  }
}
